"use strict";
function _type_of(obj) {
    "@swc/helpers - typeof";
    return obj && typeof Symbol !== "undefined" && obj.constructor === Symbol ? "symbol" : typeof obj;
}
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = function(target, all) {
    for(var name in all)__defProp(target, name, {
        get: all[name],
        enumerable: true
    });
};
var __copyProps = function(to, from, except, desc) {
    if (from && (typeof from === "undefined" ? "undefined" : _type_of(from)) === "object" || typeof from === "function") {
        var _iteratorNormalCompletion = true, _didIteratorError = false, _iteratorError = undefined;
        try {
            var _loop = function() {
                var key = _step.value;
                if (!__hasOwnProp.call(to, key) && key !== except) __defProp(to, key, {
                    get: function() {
                        return from[key];
                    },
                    enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable
                });
            };
            for(var _iterator = __getOwnPropNames(from)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true)_loop();
        } catch (err) {
            _didIteratorError = true;
            _iteratorError = err;
        } finally{
            try {
                if (!_iteratorNormalCompletion && _iterator.return != null) {
                    _iterator.return();
                }
            } finally{
                if (_didIteratorError) {
                    throw _iteratorError;
                }
            }
        }
    }
    return to;
};
var __toCommonJS = function(mod) {
    return __copyProps(__defProp({}, "__esModule", {
        value: true
    }), mod);
};
// src/index.ts
var index_exports = {};
__export(index_exports, {
    BufferedPageContextDiscriminant: function() {
        return BufferedPageContextDiscriminant;
    },
    createBufferedPageContext: function() {
        return createBufferedPageContext;
    },
    createPageContext: function() {
        return createPageContext;
    },
    getDefaultBufferedPageContext: function() {
        return getDefaultBufferedPageContext;
    },
    getDefaultPageContext: function() {
        return getDefaultPageContext;
    },
    isBufferedPageContext: function() {
        return isBufferedPageContext;
    }
});
module.exports = __toCommonJS(index_exports);
// src/page-context.ts
function isPlainObject(obj) {
    return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase() === "object";
}
var BufferedPageContextDiscriminant = "bpc";
var createBufferedPageContext = function(url, canonicalUrl, search, path, title, referrer) {
    return {
        __t: BufferedPageContextDiscriminant,
        c: canonicalUrl,
        p: path,
        u: url,
        s: search,
        t: title,
        r: referrer
    };
};
var BUFFERED_PAGE_CONTEXT_KEYS = Object.keys(createBufferedPageContext("", "", "", "", "", ""));
function isBufferedPageContext(bufferedPageCtx) {
    if (!isPlainObject(bufferedPageCtx)) return false;
    if (bufferedPageCtx.__t !== BufferedPageContextDiscriminant) return false;
    for(var k in bufferedPageCtx){
        if (!BUFFERED_PAGE_CONTEXT_KEYS.includes(k)) {
            return false;
        }
    }
    return true;
}
var createCanonicalURL = function(canonicalUrl, searchParams) {
    return canonicalUrl.indexOf("?") > -1 ? canonicalUrl : canonicalUrl + searchParams;
};
var removeHash = function(href) {
    var hashIdx = href.indexOf("#");
    return hashIdx === -1 ? href : href.slice(0, hashIdx);
};
var parseCanonicalPath = function(canonicalUrl) {
    try {
        return new URL(canonicalUrl).pathname;
    } catch (_e) {
        return canonicalUrl[0] === "/" ? canonicalUrl : "/" + canonicalUrl;
    }
};
var createPageContext = function(param) {
    var canonicalUrl = param.c, pathname = param.p, search = param.s, url = param.u, referrer = param.r, title = param.t;
    var newPath = canonicalUrl ? parseCanonicalPath(canonicalUrl) : pathname;
    var newUrl = canonicalUrl ? createCanonicalURL(canonicalUrl, search) : removeHash(url);
    return {
        path: newPath,
        referrer: referrer,
        search: search,
        title: title,
        url: newUrl
    };
};
var getDefaultBufferedPageContext = function() {
    var c = document.querySelector("link[rel='canonical']");
    return createBufferedPageContext(location.href, c && c.getAttribute("href") || void 0, location.search, location.pathname, document.title, document.referrer);
};
var getDefaultPageContext = function() {
    return createPageContext(getDefaultBufferedPageContext());
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
    BufferedPageContextDiscriminant: BufferedPageContextDiscriminant,
    createBufferedPageContext: createBufferedPageContext,
    createPageContext: createPageContext,
    getDefaultBufferedPageContext: getDefaultBufferedPageContext,
    getDefaultPageContext: getDefaultPageContext,
    isBufferedPageContext: isBufferedPageContext
});
