// src/page-context.ts
function isPlainObject(obj) {
    return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase() === "object";
}
var BufferedPageContextDiscriminant = "bpc";
var createBufferedPageContext = function(url, canonicalUrl, search, path, title, referrer) {
    return {
        __t: BufferedPageContextDiscriminant,
        c: canonicalUrl,
        p: path,
        u: url,
        s: search,
        t: title,
        r: referrer
    };
};
var BUFFERED_PAGE_CONTEXT_KEYS = Object.keys(createBufferedPageContext("", "", "", "", "", ""));
function isBufferedPageContext(bufferedPageCtx) {
    if (!isPlainObject(bufferedPageCtx)) return false;
    if (bufferedPageCtx.__t !== BufferedPageContextDiscriminant) return false;
    for(var k in bufferedPageCtx){
        if (!BUFFERED_PAGE_CONTEXT_KEYS.includes(k)) {
            return false;
        }
    }
    return true;
}
var createCanonicalURL = function(canonicalUrl, searchParams) {
    return canonicalUrl.indexOf("?") > -1 ? canonicalUrl : canonicalUrl + searchParams;
};
var removeHash = function(href) {
    var hashIdx = href.indexOf("#");
    return hashIdx === -1 ? href : href.slice(0, hashIdx);
};
var parseCanonicalPath = function(canonicalUrl) {
    try {
        return new URL(canonicalUrl).pathname;
    } catch (_e) {
        return canonicalUrl[0] === "/" ? canonicalUrl : "/" + canonicalUrl;
    }
};
var createPageContext = function(param) {
    var canonicalUrl = param.c, pathname = param.p, search = param.s, url = param.u, referrer = param.r, title = param.t;
    var newPath = canonicalUrl ? parseCanonicalPath(canonicalUrl) : pathname;
    var newUrl = canonicalUrl ? createCanonicalURL(canonicalUrl, search) : removeHash(url);
    return {
        path: newPath,
        referrer: referrer,
        search: search,
        title: title,
        url: newUrl
    };
};
var getDefaultBufferedPageContext = function() {
    var c = document.querySelector("link[rel='canonical']");
    return createBufferedPageContext(location.href, c && c.getAttribute("href") || void 0, location.search, location.pathname, document.title, document.referrer);
};
var getDefaultPageContext = function() {
    return createPageContext(getDefaultBufferedPageContext());
};
export { BufferedPageContextDiscriminant, createBufferedPageContext, createPageContext, getDefaultBufferedPageContext, getDefaultPageContext, isBufferedPageContext };
