import base64urlLib from 'base64url';

const base64url = base64urlLib;
function safebtoa(str) {
  return base64url.encode(str);
}
function safeatob(str) {
  // Going backwards: from bytestream, to percent-encoding, to original string.
  return base64url.decode(str);
}
function base64toJSON(b64str) {
  return JSON.parse(base64url.decode(b64str));
}
function jsonToBase64(json) {
  return base64url.encode(JSON.stringify(json));
}
const htmlToElement = html => {
  const template = window.document.createElement("template");
  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result
  template.innerHTML = trimmedHtml;
  return template.content.firstChild;
};
function cloneDeep(object) {
  try {
    return structuredClone(object);
  } catch {
    return JSON.parse(JSON.stringify(object));
  }
}

export { base64toJSON, base64url, cloneDeep, htmlToElement, jsonToBase64, safeatob, safebtoa };
