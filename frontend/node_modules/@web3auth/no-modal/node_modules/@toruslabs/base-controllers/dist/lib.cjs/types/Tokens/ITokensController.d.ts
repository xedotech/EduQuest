import { BaseConfig, BaseState, IController } from "../interfaces";
export type TokenAddress = string;
export type UserAddress = string;
export type BaseTokenInfo = {
    tokenAddress?: TokenAddress;
    chainId: string;
    name: string;
    symbol: string;
    decimals: string;
    balance?: string;
    logo?: string;
    customTokenId?: string;
};
export interface ITokensController<C, S, TokenInfo extends BaseTokenInfo> extends IController<C, S> {
    userSelectedAddress: UserAddress;
    userTokens: TokenInfo[];
    refreshTokenBalances(): Promise<void>;
}
export interface TokensControllerState extends BaseState {
    tokens: Record<UserAddress, BaseTokenInfo[]>;
}
export interface TokensControllerConfig extends BaseConfig {
    interval?: number;
    selectedAddress?: UserAddress;
}
