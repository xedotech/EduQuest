'use strict';

var _objectSpread = require('@babel/runtime/helpers/objectSpread2');
require('events');
require('@babel/runtime/helpers/defineProperty');
require('loglevel');
var utils = require('../utils/utils.js');
require('@toruslabs/http-helpers');
require('../enums.js');
var constants = require('./constants.js');

function createAnalyticsMiddleware({
  analytics,
  providerConfig
}) {
  return (request, response, next) => {
    // skip if the request method is not in the ANALYTICS_TRACKED_JPRC_METHODS
    if (!Object.values(constants.ANALYTICS_TRACKED_INTERNAL_JPRC_METHODS).includes(request.method)) {
      return next();
    }
    const startTime = Date.now();
    next(callback => {
      const trackData = {
        method: request.method,
        chain_id: utils.getCaipChainId(providerConfig),
        chain_rpc_target: utils.getHostname(providerConfig.rpcTarget),
        is_aa_provider_request: request.isAAProviderRequest
      };
      if (response.error) {
        analytics === null || analytics === void 0 || analytics.track(constants.ANALYTICS_EVENTS.JRPC_REQUEST_FAILED, _objectSpread(_objectSpread(_objectSpread({
          request_type: constants.ANALYTICS_JRPC_REQUEST_TYPES.INTERNAL
        }, trackData), utils.getErrorAnalyticsProperties(response.error)), {}, {
          duration: Date.now() - startTime
        }));
      } else {
        analytics === null || analytics === void 0 || analytics.track(constants.ANALYTICS_EVENTS.JRPC_REQUEST_COMPLETED, _objectSpread(_objectSpread({
          request_type: constants.ANALYTICS_JRPC_REQUEST_TYPES.INTERNAL
        }, trackData), {}, {
          duration: Date.now() - startTime
        }));
      }
      callback();
    });
  };
}

exports.createAnalyticsMiddleware = createAnalyticsMiddleware;
