import { stripHexPrefix, addHexPrefix } from '@ethereumjs/util';
import { BigNumber } from 'bignumber.js';
import BN from 'bn.js';

function bnLessThan(a, b) {
  if (a === null || a === undefined || b === null || b === undefined) {
    return null;
  }
  return new BigNumber(a, 10).lt(b, 10);
}
function bnToHex(inputBn) {
  return addHexPrefix(inputBn.toString(16));
}
function hexToBn(inputHex) {
  if (BN.isBN(inputHex)) return inputHex;
  return new BN(stripHexPrefix(inputHex), 16);
}
function BnMultiplyByFraction(targetBN, numerator, denominator) {
  const numberBN = new BN(numerator);
  const denomBN = new BN(denominator);
  return targetBN.mul(numberBN).div(denomBN);
}

export { BnMultiplyByFraction, bnLessThan, bnToHex, hexToBn };
