import { mergeMiddleware, createScaffoldMiddleware, createAsyncMiddleware, rpcErrors } from '@web3auth/auth';
import { createWalletMiddleware } from './walletMidddleware.js';

function createEthMiddleware(providerHandlers) {
  const {
    getAccounts,
    getPrivateKey,
    getPublicKey,
    processTransaction,
    processSignTransaction,
    processEthSignMessage,
    processTypedMessageV4,
    processPersonalMessage
  } = providerHandlers;
  const ethMiddleware = mergeMiddleware([createScaffoldMiddleware({
    eth_syncing: false
  }), createWalletMiddleware({
    getAccounts,
    getPrivateKey,
    getPublicKey,
    processTransaction,
    processEthSignMessage,
    processSignTransaction,
    processTypedMessageV4,
    processPersonalMessage
  })]);
  return ethMiddleware;
}
function createEthChainSwitchMiddleware({
  switchChain
}) {
  async function updateChain(req, res) {
    var _req$params;
    const chainParams = (_req$params = req.params) !== null && _req$params !== void 0 && _req$params.length ? req.params[0] : undefined;
    if (!chainParams) throw rpcErrors.invalidParams("Missing chainId");
    res.result = await switchChain(chainParams);
  }
  return createScaffoldMiddleware({
    wallet_switchEthereumChain: createAsyncMiddleware(updateChain)
  });
}

export { createEthChainSwitchMiddleware, createEthMiddleware };
