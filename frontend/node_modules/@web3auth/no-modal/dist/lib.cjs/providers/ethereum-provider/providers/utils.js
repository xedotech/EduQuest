'use strict';

var util = require('@ethereumjs/util');
var bignumber_js = require('bignumber.js');
var BN = require('bn.js');

function bnLessThan(a, b) {
  if (a === null || a === undefined || b === null || b === undefined) {
    return null;
  }
  return new bignumber_js.BigNumber(a, 10).lt(b, 10);
}
function bnToHex(inputBn) {
  return util.addHexPrefix(inputBn.toString(16));
}
function hexToBn(inputHex) {
  if (BN.isBN(inputHex)) return inputHex;
  return new BN(util.stripHexPrefix(inputHex), 16);
}
function BnMultiplyByFraction(targetBN, numerator, denominator) {
  const numberBN = new BN(numerator);
  const denomBN = new BN(denominator);
  return targetBN.mul(numberBN).div(denomBN);
}

exports.BnMultiplyByFraction = BnMultiplyByFraction;
exports.bnLessThan = bnLessThan;
exports.bnToHex = bnToHex;
exports.hexToBn = hexToBn;
