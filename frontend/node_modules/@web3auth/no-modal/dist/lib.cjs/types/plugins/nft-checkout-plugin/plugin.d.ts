import { SafeEventEmitter, type WhiteLabelData } from "@web3auth/auth";
import { IPlugin, IWeb3AuthCore, PLUGIN_STATUS_TYPE, PluginFn, WALLET_CONNECTOR_TYPE } from "../../base";
export interface NFTCheckoutPluginParams {
    modalZIndex?: number;
    clientId: string;
}
declare class NFTCheckoutPlugin extends SafeEventEmitter implements IPlugin {
    name: "nft-checkout";
    status: PLUGIN_STATUS_TYPE;
    SUPPORTED_CONNECTORS: WALLET_CONNECTOR_TYPE[];
    pluginNamespace: "eip155";
    private web3auth;
    private nftCheckoutEmbedInstance;
    private isInitialized;
    private receiverAddress;
    constructor(params: NFTCheckoutPluginParams);
    initWithWeb3Auth(web3auth: IWeb3AuthCore, whiteLabel?: WhiteLabelData): Promise<void>;
    connect(): Promise<void>;
    show({ contractId }: {
        contractId: string;
    }): Promise<void>;
    disconnect(): Promise<void>;
    cleanup(): Promise<void>;
}
export type NFTCheckoutPluginType = NFTCheckoutPlugin;
export declare const nftCheckoutPlugin: (params: NFTCheckoutPluginParams) => PluginFn;
export {};
