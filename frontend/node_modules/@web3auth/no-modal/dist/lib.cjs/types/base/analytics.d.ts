import { type EventProperties, type UserTraits } from "@segment/analytics-next";
export declare class Analytics {
    private segment;
    private globalProperties;
    private enabled;
    init(): void;
    enable(): void;
    disable(): void;
    setGlobalProperties(properties: Record<string, unknown>): void;
    identify(userId: string, traits?: UserTraits): Promise<import("@segment/analytics-next").Context>;
    track(event: string, properties?: EventProperties): Promise<import("@segment/analytics-next").Context>;
    private getSegment;
    private isSkipped;
}
export declare const ANALYTICS_EVENTS: {
    SDK_INITIALIZATION_COMPLETED: string;
    SDK_INITIALIZATION_FAILED: string;
    CONNECTION_STARTED: string;
    CONNECTION_COMPLETED: string;
    CONNECTION_FAILED: string;
    IDENTITY_TOKEN_STARTED: string;
    IDENTITY_TOKEN_COMPLETED: string;
    IDENTITY_TOKEN_FAILED: string;
    MFA_ENABLEMENT_STARTED: string;
    MFA_ENABLEMENT_COMPLETED: string;
    MFA_ENABLEMENT_FAILED: string;
    MFA_MANAGEMENT_SELECTED: string;
    MFA_MANAGEMENT_FAILED: string;
    LOGIN_MODAL_OPENED: string;
    LOGIN_MODAL_CLOSED: string;
    SOCIAL_LOGIN_SELECTED: string;
    EXTERNAL_WALLET_SELECTED: string;
    EXTERNAL_WALLET_LIST_EXPANDED: string;
    WALLET_UI_CLICKED: string;
    WALLET_CONNECT_SCANNER_CLICKED: string;
    WALLET_CHECKOUT_CLICKED: string;
    WALLET_SWAP_CLICKED: string;
};
export declare const ANALYTICS_INTEGRATION_TYPE: {
    REACT_HOOKS: string;
    VUE_COMPOSABLES: string;
    NATIVE_SDK: string;
};
export declare const ANALYTICS_SDK_TYPE: {
    WEB_NO_MODAL: string;
    WEB_MODAL: string;
};
