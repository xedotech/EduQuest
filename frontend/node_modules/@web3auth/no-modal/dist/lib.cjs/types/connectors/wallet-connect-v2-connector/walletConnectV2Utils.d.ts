import type { ISignClient } from "@walletconnect/types";
import type { IEthProviderHandlers } from "../../providers/ethereum-provider";
import type { ISolanaProviderHandlers } from "../../providers/solana-provider";
export declare function sendJrpcRequest<T, U>(signClient: ISignClient, chainId: string, method: string, params: U): Promise<T>;
export declare function getAccounts(signClient: ISignClient): Promise<string[]>;
export declare function getEthProviderHandlers({ connector, chainId }: {
    connector: ISignClient;
    chainId: number;
}): IEthProviderHandlers;
export declare function getSolProviderHandlers({ connector, chainId }: {
    connector: ISignClient;
    chainId: string;
}): ISolanaProviderHandlers;
export declare function switchChain({ connector, chainId, newChainId, }: {
    connector: ISignClient;
    chainId: number;
    newChainId: string;
}): Promise<void>;
