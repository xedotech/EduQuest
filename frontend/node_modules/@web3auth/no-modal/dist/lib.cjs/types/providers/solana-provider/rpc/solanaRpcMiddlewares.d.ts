import { JRPCMiddleware, JRPCRequest } from "@web3auth/auth";
import { ISolanaChainSwitchHandlers, ISolanaProviderHandlers } from "./interfaces";
export declare function createGetAccountsMiddleware({ getAccounts, }: {
    getAccounts: ISolanaProviderHandlers["getAccounts"];
}): JRPCMiddleware<unknown, unknown>;
export declare function createGetPublicKeyMiddleware({ getPublicKey, }: {
    getPublicKey: ISolanaProviderHandlers["getPublicKey"];
}): JRPCMiddleware<unknown, unknown>;
export declare function createRequestAccountsMiddleware({ requestAccounts, }: {
    requestAccounts: ISolanaProviderHandlers["requestAccounts"];
}): JRPCMiddleware<unknown, unknown>;
export declare function createGenericJRPCMiddleware<T, U>(targetMethod: string, handler: (req: JRPCRequest<T>) => Promise<U>): JRPCMiddleware<T, U>;
export declare function createSolanaMiddleware(providerHandlers: ISolanaProviderHandlers): JRPCMiddleware<unknown, unknown>;
export declare function createSolanaChainSwitchMiddleware({ switchSolanaChain }: ISolanaChainSwitchHandlers): JRPCMiddleware<unknown, unknown>;
export interface ISolanaAccountHandlers {
    updatePrivatekey: (req: JRPCRequest<{
        privateKey: string;
    }>) => Promise<void>;
}
export declare function createSolanaAccountMiddleware({ updatePrivatekey }: ISolanaAccountHandlers): JRPCMiddleware<unknown, unknown>;
