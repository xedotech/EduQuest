'use strict';

var react = require('react');
require('@babel/runtime/helpers/objectSpread2');
require('@babel/runtime/helpers/defineProperty');
require('@segment/analytics-next');
require('../../base/loglevel.js');
require('@toruslabs/base-controllers');
require('@web3auth/auth');
require('../../base/errors/index.js');
require('../../base/wallet/index.js');
require('../../base/connector/constants.js');
require('jwt-decode');
var errors = require('../../base/plugin/errors.js');
require('../../base/plugin/IPlugin.js');
require('@toruslabs/constants');
require('@toruslabs/http-helpers');
var useWalletServicesPlugin = require('./useWalletServicesPlugin.js');

const useWalletUI = () => {
  const {
    plugin,
    ready
  } = useWalletServicesPlugin.useWalletServicesPlugin();
  const [loading, setLoading] = react.useState(false);
  const [error, setError] = react.useState(null);
  const showWalletUI = react.useCallback(async showWalletUiParams => {
    setLoading(true);
    setError(null);
    try {
      if (!plugin) throw errors.WalletServicesPluginError.notInitialized();
      if (!ready) throw errors.WalletServicesPluginError.walletPluginNotConnected();
      await plugin.showWalletUi(showWalletUiParams);
    } catch (error) {
      setError(error);
    } finally {
      setLoading(false);
    }
  }, [plugin, ready]);
  return {
    loading,
    error,
    showWalletUI
  };
};

exports.useWalletUI = useWalletUI;
