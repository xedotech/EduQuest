'use strict';

var react = require('react');
var useSolanaWallet = require('./useSolanaWallet.js');

const useSignMessage = () => {
  const {
    solanaWallet,
    accounts
  } = useSolanaWallet.useSolanaWallet();
  const [loading, setLoading] = react.useState(false);
  const [error, setError] = react.useState(null);
  const [data, setData] = react.useState(null);
  const signMessage = react.useCallback(async (message, from) => {
    setLoading(true);
    setError(null);
    try {
      if (!solanaWallet) throw new Error("Solana wallet not found");
      const signature = await solanaWallet.signMessage(message, from !== null && from !== void 0 ? from : accounts === null || accounts === void 0 ? void 0 : accounts[0]);
      setData(signature);
      return signature;
    } catch (error) {
      setError(error);
    } finally {
      setLoading(false);
    }
  }, [solanaWallet, accounts]);
  return {
    loading,
    error,
    data,
    signMessage
  };
};

exports.useSignMessage = useSignMessage;
