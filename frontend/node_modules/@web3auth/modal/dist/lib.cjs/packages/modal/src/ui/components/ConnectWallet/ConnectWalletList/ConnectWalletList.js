'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var reactI18next = require('react-i18next');
var localeImport = require('../../../localeImport.js');
var utils = require('../../../utils.js');
var Button = require('../../Button/Button.js');
var Button_type = require('../../Button/Button.type.js');

function NoWalletsFound() {
  const [t] = reactI18next.useTranslation(undefined, {
    i18n: localeImport
  });
  return jsxRuntime.jsx("div", {
    className: "w3a--flex w3a--w-full w3a--items-center w3a--justify-center w3a--py-6 w3a--text-center w3a--text-app-gray-400 dark:w3a--text-app-gray-500",
    children: t("modal.external.no-wallets-found")
  });
}
function WalletsFound(props) {
  const {
    externalButtons,
    isLoading,
    handleWalletClick,
    deviceDetails,
    walletConnectUri,
    buttonRadius
  } = props;
  if (isLoading) {
    return jsxRuntime.jsx("div", {
      className: "w3a--flex w3a--flex-col w3a--gap-y-2",
      children: Array.from({
        length: 6
      }).map((_, index) => jsxRuntime.jsx("div", {
        className: utils.cn("w3a--h-12 w3a--w-full w3a--animate-pulse w3a--rounded-2xl w3a--bg-app-gray-200 dark:w3a--bg-app-gray-700", {
          "w3a--rounded-full": buttonRadius === "pill",
          "w3a--rounded-lg": buttonRadius === "rounded",
          "w3a--rounded-none": buttonRadius === "square"
        })
      }, `loader-${index}`))
    });
  }
  return jsxRuntime.jsx("div", {
    className: "w3a--flex w3a--flex-col w3a--gap-y-2 w3a--pr-1.5",
    children: externalButtons.map(button => jsxRuntime.jsx(Button, {
      type: Button_type.BUTTON_TYPE.WALLET,
      props: {
        label: button.displayName,
        onClick: () => handleWalletClick(button),
        button,
        deviceDetails,
        walletConnectUri,
        buttonRadius
      }
    }, button.name))
  });
}
function MoreWalletsButton(props) {
  const {
    totalExternalWalletsCount,
    initialWalletCount,
    handleMoreWallets,
    isLoading,
    isDark,
    buttonRadius
  } = props;
  const [t] = reactI18next.useTranslation(undefined, {
    i18n: localeImport
  });
  const onMoreWalletsClick = () => {
    if (handleMoreWallets) {
      handleMoreWallets();
    }
  };
  if (isLoading && initialWalletCount < totalExternalWalletsCount) {
    return jsxRuntime.jsx("div", {
      className: utils.cn("w3a--h-12 w3a--w-full w3a--animate-pulse w3a--bg-app-gray-200 dark:w3a--bg-app-gray-700", {
        "w3a--rounded-full": buttonRadius === "pill",
        "w3a--rounded-lg": buttonRadius === "rounded",
        "w3a--rounded-none": buttonRadius === "square"
      })
    });
  }
  return jsxRuntime.jsxs("button", {
    type: "button",
    className: utils.cn("w3a--flex w3a--items-center w3a--justify-start w3a--gap-x-2 w3a--bg-app-gray-50 w3a--p-3 hover:w3a--bg-app-gray-200 dark:w3a--bg-app-gray-800 dark:hover:w3a--bg-app-gray-600 active:w3a--scale-95 w3a--transition-all w3a--duration-150 w3a--mr-2.5", {
      "w3a--rounded-full": buttonRadius === "pill",
      "w3a--rounded-lg": buttonRadius === "rounded",
      "w3a--rounded-none": buttonRadius === "square"
    }),
    onClick: onMoreWalletsClick,
    children: [jsxRuntime.jsx("img", {
      src: utils.getIcons(isDark ? "view-dark" : "view-light"),
      alt: "view",
      height: "24",
      width: "24"
    }), jsxRuntime.jsx("p", {
      className: "w3a--text-base w3a--font-normal w3a--text-app-gray-700 dark:w3a--text-app-white",
      children: t("modal.connect-wallet.more-wallets")
    }), jsxRuntime.jsx("span", {
      className: "w3a--inline-flex w3a--items-center w3a--rounded-full w3a--bg-app-primary-100 w3a--px-2 w3a--py-1 w3a--text-xs w3a--font-medium w3a--text-app-primary-800 \n        dark:w3a--border dark:w3a--border-app-primary-400 dark:w3a--bg-transparent dark:w3a--text-app-primary-400",
      children: totalExternalWalletsCount - initialWalletCount
    })]
  });
}
function ConnectWalletList(props) {
  const {
    externalButtons,
    isLoading,
    totalExternalWalletsCount,
    initialWalletCount,
    handleWalletClick,
    handleMoreWallets,
    isDark,
    deviceDetails,
    walletConnectUri,
    buttonRadius
  } = props;
  const [showMoreWallets, setShowMoreWallets] = react.useState(true);
  const onShowMoreWalletsClick = () => {
    setShowMoreWallets(false);
    handleMoreWallets();
  };
  return jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [jsxRuntime.jsx("ul", {
      className: utils.cn("w3a--overflow-y-auto w3a--flex w3a--flex-col w3a--gap-y-2 w3a--h-[280px] w3a--social-container w3a--pr-2.5", {
        "w3a--h-[328px]": !showMoreWallets
      }),
      children: externalButtons.length === 0 ? jsxRuntime.jsx(NoWalletsFound, {}) : jsxRuntime.jsx(WalletsFound, {
        externalButtons: externalButtons,
        isLoading: isLoading,
        handleWalletClick: handleWalletClick,
        deviceDetails: deviceDetails,
        walletConnectUri: walletConnectUri,
        buttonRadius: buttonRadius
      })
    }), showMoreWallets && totalExternalWalletsCount > 15 && !isLoading && initialWalletCount < totalExternalWalletsCount && jsxRuntime.jsx(MoreWalletsButton, {
      totalExternalWalletsCount: totalExternalWalletsCount,
      initialWalletCount: initialWalletCount,
      handleMoreWallets: onShowMoreWalletsClick,
      isLoading: isLoading,
      isDark: isDark,
      buttonRadius: buttonRadius
    })]
  });
}

module.exports = ConnectWalletList;
