'use strict';

var jsxRuntime = require('react/jsx-runtime');
var react = require('react');
var reactI18next = require('react-i18next');
var localeImport = require('../../../localeImport.js');
var utils = require('../../../utils.js');
var PulseLoader = require('../../PulseLoader/PulseLoader.js');

function LoginPasswordLess(props) {
  const {
    isModalVisible,
    isPasswordLessCtaClicked,
    setIsPasswordLessCtaClicked,
    title,
    placeholder,
    handleFormSubmit,
    errorMessage,
    isDark,
    isPasswordLessLoading,
    buttonRadius
  } = props;
  const [t] = reactI18next.useTranslation(undefined, {
    i18n: localeImport
  });
  const inputRef = react.useRef(null);
  const [inputValue, setInputValue] = react.useState("");
  const [isInputFocused, setIsInputFocused] = react.useState(false);
  const onInputChange = e => {
    setInputValue(e.target.value);
    setIsInputFocused(true);
  };
  const handleEnter = e => {
    const {
      key
    } = e;
    if (key === "Enter") {
      handleFormSubmit(inputValue);
      setIsInputFocused(false);
    }
  };
  const onFormSubmit = e => {
    e.preventDefault();
    e.stopPropagation();
    handleFormSubmit(inputValue);
    setIsInputFocused(false);
  };
  react.useEffect(() => {
    if (!isModalVisible) {
      setIsPasswordLessCtaClicked(false);
    }
  }, [isModalVisible, setIsPasswordLessCtaClicked]);
  react.useEffect(() => {
    if (isPasswordLessCtaClicked) {
      var _inputRef$current;
      (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 || _inputRef$current.focus();
    }
  }, [isPasswordLessCtaClicked]);
  if (!isPasswordLessCtaClicked) {
    return jsxRuntime.jsxs("button", {
      type: "button",
      className: utils.cn("w3a--btn !w3a--justify-between w3a--relative w3a--group w3a--overflow-hidden", {
        "w3a--rounded-full": buttonRadius === "pill",
        "w3a--rounded-lg": buttonRadius === "rounded",
        "w3a--rounded-none": buttonRadius === "square"
      }),
      onClick: () => {
        setIsPasswordLessCtaClicked(true);
      },
      children: [jsxRuntime.jsx("p", {
        className: "w3a--text-app-gray-900 dark:w3a--text-app-white",
        children: t("modal.passwordless.title", {
          title
        })
      }), jsxRuntime.jsx("img", {
        id: "passwordless-arrow",
        className: "w3a--absolute w3a--right-4 w3a--top-1/2 -w3a--translate-x-6 -w3a--translate-y-1/2 w3a--opacity-0 w3a--transition-all w3a--duration-300\n          group-hover:w3a--translate-x-0 group-hover:w3a--opacity-100",
        src: utils.getIcons(isDark ? "chevron-right-dark" : "chevron-right-light"),
        alt: "arrow"
      })]
    });
  }
  return jsxRuntime.jsxs(jsxRuntime.Fragment, {
    children: [jsxRuntime.jsxs("div", {
      className: utils.cn("w3a--input", isInputFocused && "!w3a--border-app-primary-600", {
        "w3a--rounded-full": buttonRadius === "pill",
        "w3a--rounded-lg": buttonRadius === "rounded",
        "w3a--rounded-none": buttonRadius === "square"
      }),
      children: [jsxRuntime.jsx("input", {
        ref: inputRef,
        onInput: onInputChange,
        value: inputValue,
        placeholder: placeholder,
        onFocus: () => {
          setIsInputFocused(true);
        },
        onBlur: e => {
          e.target.placeholder = `${placeholder}`;
          setIsInputFocused(false);
        },
        type: "text",
        className: utils.cn("w3a--w-full w3a--appearance-none w3a--bg-transparent w3a--text-app-gray-900 w3a--outline-none placeholder:w3a--text-xs placeholder:w3a--text-app-gray-400 focus:w3a--outline-none active:w3a--outline-none dark:w3a--text-app-white dark:placeholder:w3a--text-app-gray-500"),
        onKeyDown: e => handleEnter(e),
        disabled: isPasswordLessLoading
      }), isPasswordLessLoading && jsxRuntime.jsx(PulseLoader, {}), inputValue && !isPasswordLessLoading && jsxRuntime.jsx("button", {
        type: "button",
        className: "w3a--appearance-none",
        onClick: onFormSubmit,
        children: jsxRuntime.jsx("img", {
          src: utils.getIcons(isDark ? "chevron-right-dark" : "chevron-right-light"),
          alt: "arrow"
        })
      })]
    }), errorMessage && !isInputFocused && isPasswordLessCtaClicked && jsxRuntime.jsx("p", {
      className: "w3a--w-full w3a--pl-6 w3a--text-start w3a--text-xs w3a--font-normal w3a--text-app-red-500 dark:w3a--text-app-red-400",
      children: errorMessage
    })]
  });
}

module.exports = LoginPasswordLess;
