import { CodeInitiateRequestBodyParams, CodeVerifyRequestBodyParams, IStartResponse, IVerifyResponse, PasswordlessHandlerParams, WhiteLabelParams } from "../interfaces";
export declare abstract class PasswordlessHandler {
    authBaseApiUrl: string;
    passwordlessParams: PasswordlessHandlerParams;
    trackingIdentifier?: string;
    version: string;
    constructor(params: PasswordlessHandlerParams);
    get name(): string;
    get connection(): "email" | "sms";
    get trackingId(): string | undefined;
    get sessionStorageAvailable(): boolean;
    get whiteLabelParams(): WhiteLabelParams;
    set trackingId(value: string | undefined);
    protected start(params: CodeInitiateRequestBodyParams): Promise<IStartResponse>;
    protected verify(params: CodeVerifyRequestBodyParams): Promise<IVerifyResponse>;
    private handleError;
    abstract sendVerificationCode(params: {
        captchaToken: string;
    }): Promise<IStartResponse>;
    abstract verifyCode(code: string): Promise<IVerifyResponse>;
}
