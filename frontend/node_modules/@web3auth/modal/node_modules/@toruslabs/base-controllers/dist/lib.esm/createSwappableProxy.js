function createSwappableProxy(initialTarget) {
  let target = initialTarget;
  let setTarget = newTarget => {
    target = newTarget;
  };
  const proxy = new Proxy({}, {
    get: (_, name) => {
      // override `setTarget` access
      if (name === "setTarget") return setTarget;
      return target[name];
    },
    set: (_, name, value) => {
      // allow `setTarget` overrides
      if (name === "setTarget") {
        setTarget = value;
        return true;
      }
      target[name] = value;
      return true;
    },
    has: (_, key) => {
      if (key[0] === "_") {
        return false;
      }
      return key in target;
    }
  });
  return proxy;
}

export { createSwappableProxy };
