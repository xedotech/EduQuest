import BN from "bn.js";
import { ec as EllipticCurve } from "elliptic";
export declare const prime: BN;
export declare const maxEcdsaVal: BN;
export declare function hasHexPrefix(str: string): boolean;
export declare function pedersen(input: string[]): string;
export declare function hashMsg(instructionTypeBn: BN, vault0Bn: BN, vault1Bn: BN, amount0Bn: BN, amount1Bn: BN, nonceBn: BN, expirationTimestampBn: BN, token0: string, token1OrPubKey: string, condition?: string | null): string;
export declare function getLimitOrderMsgHash(vaultSell: number, vaultBuy: string, amountSell: string, amountBuy: string, tokenSell: string, tokenBuy: string, nonce: number, expirationTimestamp: number): string;
export declare function getTransferMsgHash(amount: string, nonce: number, senderVaultId: number, token: string, receiverVaultId: number, receiverPublicKey: string, expirationTimestamp: number, condition?: string | null): string;
export declare function fixMsgHashLen(msgHash: string): string;
export declare function sign(privateKey: EllipticCurve.KeyPair, msgHash: string): EllipticCurve.Signature;
export declare function verify(publicKey: EllipticCurve.KeyPair, msgHash: string, msgSignature: EllipticCurve.Signature): boolean;
export declare const ec: EllipticCurve;
