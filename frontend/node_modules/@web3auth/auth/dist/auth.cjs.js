/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 432:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  Nj: () => (/* reexport */ Auth),
  lR: () => (/* reexport */ AuthError),
  D3: () => (/* reexport */ InitializationError),
  Qd: () => (/* reexport */ LoginError),
  j8: () => (/* reexport */ constructURL),
  bG: () => (/* reexport */ getHashQueryParams),
  A9: () => (/* reexport */ getPopupFeatures),
  uN: () => (/* reexport */ getTimeout),
  Gz: () => (/* reexport */ isMobileOrTablet),
  H$: () => (/* reexport */ logger/* loglevel */.H),
  rE: () => (/* reexport */ version)
});

// EXTERNAL MODULE: ./src/utils/logger.ts + 1 modules
var logger = __webpack_require__(627);
// EXTERNAL MODULE: external "@babel/runtime/helpers/objectSpread2"
var objectSpread2_ = __webpack_require__(846);
var objectSpread2_default = /*#__PURE__*/__webpack_require__.n(objectSpread2_);
// EXTERNAL MODULE: external "@babel/runtime/helpers/defineProperty"
var defineProperty_ = __webpack_require__(990);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);
// EXTERNAL MODULE: external "@toruslabs/constants"
var constants_ = __webpack_require__(145);
;// external "@toruslabs/session-manager"
const session_manager_namespaceObject = require("@toruslabs/session-manager");
// EXTERNAL MODULE: ./src/utils/constants.ts
var constants = __webpack_require__(107);
// EXTERNAL MODULE: ./src/utils/browserStorage.ts
var browserStorage = __webpack_require__(69);
// EXTERNAL MODULE: ./src/utils/utils.ts + 1 modules
var utils = __webpack_require__(709);
;// external "ts-custom-error"
const external_ts_custom_error_namespaceObject = require("ts-custom-error");
;// ./src/core/errors.ts


class AuthError extends external_ts_custom_error_namespaceObject.CustomError {
  constructor(code, message) {
    // takes care of stack and proto
    super(message);
    defineProperty_default()(this, "code", void 0);
    defineProperty_default()(this, "message", void 0);
    this.code = code;
    this.message = message || "";
    // Set name explicitly as minification can mangle class names
    Object.defineProperty(this, "name", {
      value: "AuthError"
    });
  }
  toJSON() {
    return {
      name: this.name,
      code: this.code,
      message: this.message
    };
  }
  toString() {
    return JSON.stringify(this.toJSON());
  }
}
class InitializationError extends AuthError {
  constructor(code, message) {
    // takes care of stack and proto
    super(code, message);

    // Set name explicitly as minification can mangle class names
    Object.defineProperty(this, "name", {
      value: "InitializationError"
    });
  }
  static fromCode(code, extraMessage = "") {
    return new InitializationError(code, `${InitializationError.messages[code]}, ${extraMessage}`);
  }
  static invalidParams(extraMessage = "") {
    return InitializationError.fromCode(5001, extraMessage);
  }
  static notInitialized(extraMessage = "") {
    return InitializationError.fromCode(5002, extraMessage);
  }
}

/**
 * login errors
 */
defineProperty_default()(InitializationError, "messages", {
  5000: "Custom",
  5001: "Invalid constructor params",
  5002: "SDK not initialized. please call init first"
});
class LoginError extends AuthError {
  constructor(code, message) {
    // takes care of stack and proto
    super(code, message);

    // Set name explicitly as minification can mangle class names
    Object.defineProperty(this, "name", {
      value: "LoginError"
    });
  }
  static fromCode(code, extraMessage = "") {
    return new LoginError(code, `${LoginError.messages[code]}, ${extraMessage}`);
  }
  static invalidLoginParams(extraMessage = "") {
    return LoginError.fromCode(5111, extraMessage);
  }
  static userNotLoggedIn(extraMessage = "") {
    return LoginError.fromCode(5112, extraMessage);
  }
  static popupClosed(extraMessage = "") {
    return LoginError.fromCode(5113, extraMessage);
  }
  static loginFailed(extraMessage = "") {
    return LoginError.fromCode(5114, extraMessage);
  }
  static popupBlocked(extraMessage = "") {
    return LoginError.fromCode(5115, extraMessage);
  }
  static mfaAlreadyEnabled(extraMessage = "") {
    return LoginError.fromCode(5116, extraMessage);
  }
  static mfaNotEnabled(extraMessage = "") {
    return LoginError.fromCode(5117, extraMessage);
  }
}
defineProperty_default()(LoginError, "messages", {
  5000: "Custom",
  5111: "Invalid login params",
  5112: "User not logged in.",
  5113: "login popup has been closed by the user",
  5114: "Login failed",
  5115: "Popup was blocked. Please call this function as soon as user clicks button or use redirect mode",
  5116: "MFA already enabled",
  5117: "MFA not yet enabled. Please call `enableMFA` first"
});
;// external "@toruslabs/secure-pub-sub"
const secure_pub_sub_namespaceObject = require("@toruslabs/secure-pub-sub");
// EXTERNAL MODULE: external "events"
var external_events_ = __webpack_require__(735);
;// external "bowser"
const external_bowser_namespaceObject = require("bowser");
var external_bowser_default = /*#__PURE__*/__webpack_require__.n(external_bowser_namespaceObject);
;// ./src/core/utils.ts





// don't use destructuring for process.env cause it messes up webpack env plugin
const version = "9.6.4";
function getHashQueryParams(replaceUrl = false) {
  const result = {};
  const queryUrlParams = new URLSearchParams(window.location.search.slice(1));
  queryUrlParams.forEach((value, key) => {
    if (key !== "b64Params") {
      result[key] = value;
    }
  });
  const queryResult = queryUrlParams.get("b64Params");
  if (queryResult) {
    try {
      const queryParams = JSON.parse((0,utils/* safeatob */._i)(queryResult));
      Object.keys(queryParams).forEach(key => {
        result[key] = queryParams[key];
      });
    } catch (error) {
      logger/* loglevel */.H.error(error);
    }
  }
  const hashUrlParams = new URLSearchParams(window.location.hash.substring(1));
  hashUrlParams.forEach((value, key) => {
    if (key !== "b64Params") {
      result[key] = value;
    }
  });
  const hashResult = hashUrlParams.get("b64Params");
  if (hashResult) {
    try {
      const hashParams = JSON.parse((0,utils/* safeatob */._i)(hashResult));
      Object.keys(hashParams).forEach(key => {
        result[key] = hashParams[key];
      });
    } catch (error) {
      logger/* loglevel */.H.error(error);
    }
  }
  if (replaceUrl) {
    const cleanUrl = new URL(window.location.origin + window.location.pathname);
    // https://dapp.com/#b64Params=asacsdnvdfv&state=sldjvndfkjvn&dappValue=sdjvndf
    // NB: `params.size !== 0` evaluates to true even if `.size` isn't implemented and returns `undefined`, like in Safari <17 and Chrome <113.
    if (queryUrlParams.size !== 0) {
      queryUrlParams.delete("error");
      queryUrlParams.delete("state");
      queryUrlParams.delete("b64Params");
      queryUrlParams.delete("sessionNamespace");
      cleanUrl.search = queryUrlParams.toString();
    }
    if (hashUrlParams.size !== 0) {
      hashUrlParams.delete("error");
      hashUrlParams.delete("state");
      hashUrlParams.delete("b64Params");
      hashUrlParams.delete("sessionNamespace");
      cleanUrl.hash = hashUrlParams.toString();
    }
    window.history.replaceState(objectSpread2_default()(objectSpread2_default()({}, window.history.state), {}, {
      as: cleanUrl.href,
      url: cleanUrl.href
    }), "", cleanUrl.href);
  }
  return result;
}
function constructURL(params) {
  const {
    baseURL,
    query,
    hash
  } = params;
  const url = new URL(baseURL);
  if (query) {
    Object.keys(query).forEach(key => {
      url.searchParams.append(key, query[key]);
    });
  }
  if (hash) {
    const h = new URL(constructURL({
      baseURL,
      query: hash
    })).searchParams.toString();
    url.hash = h;
  }
  return url.toString();
}
function getPopupFeatures() {
  if (typeof window === "undefined") return "";
  // Fixes dual-screen position                             Most browsers      Firefox
  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;
  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;
  const w = 1200;
  const h = 700;
  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;
  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;
  const systemZoom = 1; // No reliable estimate

  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);
  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);
  const features = `titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=${h / systemZoom},width=${w / systemZoom},top=${top},left=${left}`;
  return features;
}
function isMobileOrTablet() {
  if (typeof window === "undefined") return false;
  const browser = external_bowser_default().getParser(window.navigator.userAgent);
  const platform = browser.getPlatform();
  return platform.type === (external_bowser_default()).PLATFORMS_MAP.tablet || platform.type === (external_bowser_default()).PLATFORMS_MAP.mobile;
}
function getTimeout(loginProvider) {
  if ((loginProvider === constants/* LOGIN_PROVIDER */.uv.FACEBOOK || loginProvider === constants/* LOGIN_PROVIDER */.uv.LINE) && isMobileOrTablet()) {
    return 1000 * 60 * 5; // 5 minutes to finish the login
  }
  return 1000 * 10; // 10 seconds
}
;// ./src/core/PopupHandler.ts






class PopupHandler extends external_events_.EventEmitter {
  constructor({
    url,
    target,
    features,
    timeout = 30000,
    sessionSocketUrl,
    sessionServerUrl
  }) {
    // Disabling the rule here, as it is a false positive.
    // eslint-disable-next-line constructor-super
    super();
    defineProperty_default()(this, "url", void 0);
    defineProperty_default()(this, "target", void 0);
    defineProperty_default()(this, "features", void 0);
    defineProperty_default()(this, "window", void 0);
    defineProperty_default()(this, "windowTimer", void 0);
    defineProperty_default()(this, "iClosedWindow", void 0);
    defineProperty_default()(this, "timeout", void 0);
    defineProperty_default()(this, "sessionSocketUrl", void 0);
    defineProperty_default()(this, "sessionServerUrl", void 0);
    this.url = url;
    this.target = target || "_blank";
    this.features = features || getPopupFeatures();
    this.window = undefined;
    this.windowTimer = undefined;
    this.iClosedWindow = false;
    this.timeout = timeout;
    this.sessionServerUrl = sessionServerUrl || constants_.SESSION_SERVER_API_URL;
    this.sessionSocketUrl = sessionSocketUrl || constants_.SESSION_SERVER_SOCKET_URL;
    this._setupTimer();
  }
  _setupTimer() {
    this.windowTimer = Number(setInterval(() => {
      if (this.window && this.window.closed) {
        clearInterval(this.windowTimer);
        setTimeout(() => {
          if (!this.iClosedWindow) {
            this.emit("close");
          }
          this.iClosedWindow = false;
          this.window = undefined;
        }, this.timeout);
      }
      if (this.window === undefined) clearInterval(this.windowTimer);
    }, 500));
  }
  open() {
    var _this$window;
    this.window = window.open(this.url, this.target, this.features);
    if (!this.window) throw LoginError.popupBlocked();
    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();
  }
  close() {
    this.iClosedWindow = true;
    if (this.window) this.window.close();
  }
  redirect(locationReplaceOnRedirect) {
    if (locationReplaceOnRedirect) {
      window.location.replace(this.url);
    } else {
      window.location.href = this.url;
    }
  }
  async listenOnChannel(loginId) {
    const securePubSub = new secure_pub_sub_namespaceObject.SecurePubSub({
      serverUrl: this.sessionServerUrl,
      socketUrl: this.sessionSocketUrl
    });
    const data = await securePubSub.subscribe(loginId);
    this.close();
    securePubSub.cleanup();
    const parsedData = JSON.parse(data);
    if (parsedData.error) {
      return {
        error: parsedData.error,
        state: parsedData.state
      };
    }
    return parsedData.data;
  }
}
/* harmony default export */ const core_PopupHandler = (PopupHandler);
;// ./src/core/auth.ts









class Auth {
  constructor(options) {
    defineProperty_default()(this, "state", {});
    defineProperty_default()(this, "options", void 0);
    defineProperty_default()(this, "sessionManager", void 0);
    defineProperty_default()(this, "currentStorage", void 0);
    defineProperty_default()(this, "_storageBaseKey", "auth_store");
    defineProperty_default()(this, "dappState", void 0);
    defineProperty_default()(this, "addVersionInUrls", true);
    if (!options.clientId) throw InitializationError.invalidParams("clientId is required");
    if (!options.network) options.network = constants/* WEB3AUTH_NETWORK */.Lr.SAPPHIRE_MAINNET;
    if (!options.buildEnv) options.buildEnv = constants/* BUILD_ENV */.F3.PRODUCTION;
    if (options.buildEnv === constants/* BUILD_ENV */.F3.DEVELOPMENT || options.buildEnv === constants/* BUILD_ENV */.F3.TESTING || options.sdkUrl) this.addVersionInUrls = false;
    if (!options.sdkUrl && !options.useMpc) {
      if (options.buildEnv === constants/* BUILD_ENV */.F3.DEVELOPMENT) {
        options.sdkUrl = "http://localhost:3000";
        options.dashboardUrl = "http://localhost:5173";
      } else if (options.buildEnv === constants/* BUILD_ENV */.F3.STAGING) {
        options.sdkUrl = "https://staging-auth.web3auth.io";
        options.dashboardUrl = "https://staging-account.web3auth.io";
      } else if (options.buildEnv === constants/* BUILD_ENV */.F3.TESTING) {
        options.sdkUrl = "https://develop-auth.web3auth.io";
        options.dashboardUrl = "https://develop-account.web3auth.io";
      } else {
        options.sdkUrl = "https://auth.web3auth.io";
        options.dashboardUrl = "https://account.web3auth.io";
      }
    }
    if (options.useMpc && !options.sdkUrl) {
      if (Object.values(constants/* WEB3AUTH_LEGACY_NETWORK */.lh).includes(options.network)) throw InitializationError.invalidParams("MPC is not supported on legacy networks, please use sapphire_devnet or sapphire_mainnet.");
      if (options.buildEnv === constants/* BUILD_ENV */.F3.DEVELOPMENT) {
        options.sdkUrl = "http://localhost:3000";
      } else if (options.buildEnv === constants/* BUILD_ENV */.F3.STAGING) {
        options.sdkUrl = "https://staging-mpc-auth.web3auth.io";
      } else if (options.buildEnv === constants/* BUILD_ENV */.F3.TESTING) {
        options.sdkUrl = "https://develop-mpc-auth.web3auth.io";
      } else {
        options.sdkUrl = "https://mpc-auth.web3auth.io";
      }
    }
    if (!options.redirectUrl && typeof window !== "undefined") {
      options.redirectUrl = `${window.location.protocol}//${window.location.host}${window.location.pathname}`;
    }
    if (!options.uxMode) options.uxMode = constants/* UX_MODE */.sE.REDIRECT;
    if (typeof options.replaceUrlOnRedirect !== "boolean") options.replaceUrlOnRedirect = true;
    if (!options.originData) options.originData = {};
    if (!options.whiteLabel) options.whiteLabel = {};
    if (!options.loginConfig) options.loginConfig = {};
    if (!options.mfaSettings) options.mfaSettings = {};
    if (!options.storageServerUrl) options.storageServerUrl = constants_.SESSION_SERVER_API_URL;
    if (!options.sessionSocketUrl) options.sessionSocketUrl = constants_.SESSION_SERVER_SOCKET_URL;
    if (!options.storageKey) options.storageKey = "local";
    if (!options.webauthnTransports) options.webauthnTransports = ["internal"];
    if (!options.sessionTime) options.sessionTime = 86400;
    this.options = options;
  }
  get privKey() {
    if (this.options.useMpc) return this.state.factorKey || "";
    return this.state.privKey ? this.state.privKey.padStart(64, "0") : "";
  }
  get coreKitKey() {
    return this.state.coreKitKey ? this.state.coreKitKey.padStart(64, "0") : "";
  }
  get ed25519PrivKey() {
    return this.state.ed25519PrivKey ? this.state.ed25519PrivKey.padStart(128, "0") : "";
  }
  get coreKitEd25519Key() {
    return this.state.coreKitEd25519PrivKey ? this.state.coreKitEd25519PrivKey.padStart(128, "0") : "";
  }
  get sessionId() {
    return this.state.sessionId || "";
  }
  get sessionNamespace() {
    return this.options.sessionNamespace || "";
  }
  get appState() {
    return this.state.userInfo.appState || this.dappState || "";
  }
  get baseUrl() {
    // testing and develop don't have versioning
    if (!this.addVersionInUrls) return `${this.options.sdkUrl}`;
    return `${this.options.sdkUrl}/v${version.split(".")[0]}`;
  }
  get dashboardUrl() {
    // testing and develop don't have versioning
    if (!this.addVersionInUrls) return `${this.options.dashboardUrl}`;
    return `${this.options.dashboardUrl}/v${version.split(".")[0]}`;
  }
  async init() {
    // get sessionNamespace from the redirect result.
    const params = getHashQueryParams(this.options.replaceUrlOnRedirect);
    if (params.sessionNamespace) this.options.sessionNamespace = params.sessionNamespace;
    const storageKey = this.options.sessionNamespace ? `${this._storageBaseKey}_${this.options.sessionNamespace}` : this._storageBaseKey;
    this.currentStorage = browserStorage/* BrowserStorage */.s.getInstance(storageKey, this.options.storageKey);
    const sessionId = this.currentStorage.get("sessionId");
    this.sessionManager = new session_manager_namespaceObject.SessionManager({
      sessionServerBaseUrl: this.options.storageServerUrl,
      sessionNamespace: this.options.sessionNamespace,
      sessionTime: this.options.sessionTime,
      sessionId,
      allowedOrigin: this.options.sdkUrl
    });
    if (this.options.network === constants/* WEB3AUTH_NETWORK */.Lr.TESTNET || this.options.network === constants/* WEB3AUTH_NETWORK */.Lr.SAPPHIRE_DEVNET) {
      // using console log because it shouldn't be affected by loglevel config
      // eslint-disable-next-line no-console
      console.log(`%c WARNING! You are on ${this.options.network}. Please set network: 'mainnet' or 'sapphire_mainnet' in production`, "color: #FF0000");
    }
    if (this.options.buildEnv !== constants/* BUILD_ENV */.F3.PRODUCTION) {
      // using console log because it shouldn't be affected by loglevel config
      // eslint-disable-next-line no-console
      console.log(`%c WARNING! You are using build env ${this.options.buildEnv}. Please set buildEnv: 'production' in production`, "color: #FF0000");
    }
    if (params.error) {
      this.dappState = params.state;
      throw LoginError.loginFailed(params.error);
    }
    if (params.sessionId) {
      this.currentStorage.set("sessionId", params.sessionId);
      this.sessionManager.sessionId = params.sessionId;
    }
    if (this.sessionManager.sessionId) {
      const data = await this._authorizeSession();
      // Fill state with correct info from session
      // If session is invalid all the data is unset here.
      this.updateState(data);
      if (Object.keys(data).length === 0) {
        // If session is invalid, unset the sessionId from localStorage.
        this.currentStorage.set("sessionId", "");
      } else {
        this.updateState({
          sessionId: this.sessionManager.sessionId
        });
      }
    }
  }
  async login(params) {
    if (!params.loginProvider) throw LoginError.invalidLoginParams(`loginProvider is required`);

    // in case of redirect mode, redirect url will be dapp specified
    // in case of popup mode, redirect url will be sdk specified
    const defaultParams = {
      redirectUrl: this.options.redirectUrl
    };
    const loginParams = objectSpread2_default()(objectSpread2_default()({
      loginProvider: params.loginProvider
    }, defaultParams), params);
    const dataObject = {
      actionType: constants/* AUTH_ACTIONS */.FR.LOGIN,
      options: this.options,
      params: loginParams
    };
    const result = await this.authHandler(`${this.baseUrl}/start`, dataObject, getTimeout(params.loginProvider));
    if (this.options.uxMode === constants/* UX_MODE */.sE.REDIRECT) return null;
    if (result.error) {
      this.dappState = result.state;
      throw LoginError.loginFailed(result.error);
    }
    this.sessionManager.sessionId = result.sessionId;
    this.options.sessionNamespace = result.sessionNamespace;
    this.currentStorage.set("sessionId", result.sessionId);
    await this.rehydrateSession();
    return {
      privKey: this.privKey
    };
  }
  async logout() {
    if (!this.sessionManager.sessionId) throw LoginError.userNotLoggedIn();
    await this.sessionManager.invalidateSession();
    this.updateState({
      privKey: "",
      coreKitKey: "",
      coreKitEd25519PrivKey: "",
      ed25519PrivKey: "",
      walletKey: "",
      oAuthPrivateKey: "",
      tKey: "",
      metadataNonce: "",
      keyMode: undefined,
      userInfo: {
        name: "",
        profileImage: "",
        dappShare: "",
        idToken: "",
        oAuthIdToken: "",
        oAuthAccessToken: "",
        appState: "",
        email: "",
        verifier: "",
        verifierId: "",
        aggregateVerifier: "",
        typeOfLogin: "",
        isMfaEnabled: false
      },
      authToken: "",
      sessionId: "",
      factorKey: "",
      signatures: [],
      tssShareIndex: -1,
      tssPubKey: "",
      tssShare: "",
      tssNonce: -1
    });
    this.currentStorage.set("sessionId", "");
  }
  async enableMFA(params) {
    var _this$state$userInfo;
    if (!this.sessionId) throw LoginError.userNotLoggedIn();
    if (this.state.userInfo.isMfaEnabled) throw LoginError.mfaAlreadyEnabled();
    // in case of redirect mode, redirect url will be dapp specified
    // in case of popup mode, redirect url will be sdk specified
    const defaultParams = {
      redirectUrl: this.options.redirectUrl
    };
    const dataObject = {
      actionType: constants/* AUTH_ACTIONS */.FR.ENABLE_MFA,
      options: this.options,
      params: objectSpread2_default()(objectSpread2_default()(objectSpread2_default()({}, defaultParams), params), {}, {
        loginProvider: this.state.userInfo.typeOfLogin,
        extraLoginOptions: {
          login_hint: this.state.userInfo.verifierId
        },
        mfaLevel: "mandatory"
      }),
      sessionId: this.sessionId
    };
    const result = await this.authHandler(`${this.baseUrl}/start`, dataObject, getTimeout(dataObject.params.loginProvider));
    if (this.options.uxMode === constants/* UX_MODE */.sE.REDIRECT) return null;
    if (result.error) {
      this.dappState = result.state;
      throw LoginError.loginFailed(result.error);
    }
    this.sessionManager.sessionId = result.sessionId;
    this.options.sessionNamespace = result.sessionNamespace;
    this.currentStorage.set("sessionId", result.sessionId);
    await this.rehydrateSession();
    return Boolean((_this$state$userInfo = this.state.userInfo) === null || _this$state$userInfo === void 0 ? void 0 : _this$state$userInfo.isMfaEnabled);
  }
  async manageMFA(params) {
    if (!this.sessionId) throw LoginError.userNotLoggedIn();
    if (!this.state.userInfo.isMfaEnabled) throw LoginError.mfaNotEnabled();

    // in case of redirect mode, redirect url will be dapp specified
    // in case of popup mode, redirect url will be sdk specified
    const defaultParams = {
      redirectUrl: `${this.dashboardUrl}/wallet/account`,
      dappUrl: `${window.location.origin}${window.location.pathname}`
    };
    const loginId = session_manager_namespaceObject.SessionManager.generateRandomSessionKey();
    const dataObject = {
      actionType: constants/* AUTH_ACTIONS */.FR.MANAGE_MFA,
      // manage mfa always opens in a new tab, so need to fix the uxMode to redirect.
      options: objectSpread2_default()(objectSpread2_default()({}, this.options), {}, {
        uxMode: "redirect"
      }),
      params: objectSpread2_default()(objectSpread2_default()(objectSpread2_default()({}, defaultParams), params), {}, {
        loginProvider: this.state.userInfo.typeOfLogin,
        extraLoginOptions: {
          login_hint: this.state.userInfo.verifierId
        },
        appState: (0,utils/* jsonToBase64 */.Rm)({
          loginId
        })
      }),
      sessionId: this.sessionId
    };
    this.createLoginSession(loginId, dataObject, dataObject.options.sessionTime, true);
    const configParams = {
      loginId,
      sessionNamespace: this.options.sessionNamespace,
      storageServerUrl: this.options.storageServerUrl
    };
    const loginUrl = constructURL({
      baseURL: `${this.baseUrl}/start`,
      hash: {
        b64Params: (0,utils/* jsonToBase64 */.Rm)(configParams)
      }
    });
    window.open(loginUrl, "_blank");
  }
  async manageSocialFactor(actionType, params) {
    if (!this.sessionId) throw LoginError.userNotLoggedIn();

    // in case of redirect mode, redirect url will be dapp specified
    // in case of popup mode, redirect url will be sdk specified
    const defaultParams = {
      redirectUrl: this.options.redirectUrl
    };
    const dataObject = {
      actionType,
      options: this.options,
      params: objectSpread2_default()(objectSpread2_default()({}, defaultParams), params),
      sessionId: this.sessionId
    };
    const result = await this.authHandler(`${this.baseUrl}/start`, dataObject);
    if (this.options.uxMode === constants/* UX_MODE */.sE.REDIRECT) return undefined;
    if (result.error) return false;
    return true;
  }
  async addAuthenticatorFactor(params) {
    if (!this.sessionId) throw LoginError.userNotLoggedIn();

    // in case of redirect mode, redirect url will be dapp specified
    // in case of popup mode, redirect url will be sdk specified
    const defaultParams = {
      redirectUrl: this.options.redirectUrl
    };
    const dataObject = {
      actionType: constants/* AUTH_ACTIONS */.FR.ADD_AUTHENTICATOR_FACTOR,
      options: this.options,
      params: objectSpread2_default()(objectSpread2_default()(objectSpread2_default()({}, defaultParams), params), {}, {
        loginProvider: constants/* LOGIN_PROVIDER */.uv.AUTHENTICATOR
      }),
      sessionId: this.sessionId
    };
    const result = await this.authHandler(`${this.baseUrl}/start`, dataObject);
    if (this.options.uxMode === constants/* UX_MODE */.sE.REDIRECT) return undefined;
    if (result.error) return false;
    return true;
  }
  async addPasskeyFactor(params) {
    if (!this.sessionId) throw LoginError.userNotLoggedIn();

    // in case of redirect mode, redirect url will be dapp specified
    // in case of popup mode, redirect url will be sdk specified
    const defaultParams = {
      redirectUrl: this.options.redirectUrl
    };
    const dataObject = {
      actionType: constants/* AUTH_ACTIONS */.FR.ADD_PASSKEY_FACTOR,
      options: this.options,
      params: objectSpread2_default()(objectSpread2_default()(objectSpread2_default()({}, defaultParams), params), {}, {
        loginProvider: constants/* LOGIN_PROVIDER */.uv.PASSKEYS
      }),
      sessionId: this.sessionId
    };
    const result = await this.authHandler(`${this.baseUrl}/start`, dataObject);
    if (this.options.uxMode === constants/* UX_MODE */.sE.REDIRECT) return undefined;
    if (result.error) return false;
    return true;
  }
  getUserInfo() {
    if (!this.sessionManager.sessionId) {
      throw LoginError.userNotLoggedIn();
    }
    return this.state.userInfo;
  }
  async createLoginSession(loginId, data, timeout = 600, skipAwait = false) {
    if (!this.sessionManager) throw InitializationError.notInitialized();
    const loginSessionMgr = new session_manager_namespaceObject.SessionManager({
      sessionServerBaseUrl: data.options.storageServerUrl,
      sessionNamespace: data.options.sessionNamespace,
      sessionTime: timeout,
      // each login key must be used with 10 mins (might be used at the end of popup redirect)
      sessionId: loginId,
      allowedOrigin: this.options.sdkUrl
    });
    const promise = loginSessionMgr.createSession(JSON.parse(JSON.stringify(data)));
    if (data.options.uxMode === constants/* UX_MODE */.sE.REDIRECT && !skipAwait) {
      await promise;
    }
  }
  async _authorizeSession() {
    try {
      if (!this.sessionManager.sessionId) return {};
      const result = await this.sessionManager.authorizeSession();
      return result;
    } catch (err) {
      logger/* loglevel */.H.error("authorization failed", err);
      return {};
    }
  }
  updateState(data) {
    this.state = objectSpread2_default()(objectSpread2_default()({}, this.state), data);
  }
  async rehydrateSession() {
    const result = await this._authorizeSession();
    this.updateState(result);
  }
  async authHandler(url, dataObject, popupTimeout = 1000 * 10) {
    const loginId = session_manager_namespaceObject.SessionManager.generateRandomSessionKey();
    await this.createLoginSession(loginId, dataObject);
    const configParams = {
      loginId,
      sessionNamespace: this.options.sessionNamespace,
      storageServerUrl: this.options.storageServerUrl
    };
    if (this.options.uxMode === constants/* UX_MODE */.sE.REDIRECT) {
      const loginUrl = constructURL({
        baseURL: url,
        hash: {
          b64Params: (0,utils/* jsonToBase64 */.Rm)(configParams)
        }
      });
      window.location.href = loginUrl;
      return undefined;
    }
    const loginUrl = constructURL({
      baseURL: url,
      hash: {
        b64Params: (0,utils/* jsonToBase64 */.Rm)(configParams)
      }
    });
    const currentWindow = new core_PopupHandler({
      url: loginUrl,
      timeout: popupTimeout,
      sessionServerUrl: this.options.storageServerUrl,
      sessionSocketUrl: this.options.sessionSocketUrl
    });
    return new Promise((resolve, reject) => {
      currentWindow.on("close", () => {
        reject(LoginError.popupClosed());
      });
      currentWindow.listenOnChannel(loginId).then(resolve).catch(reject);
      try {
        currentWindow.open();
      } catch (error) {
        reject(error);
      }
    });
  }
}
;// ./src/core/index.ts





/***/ }),

/***/ 979:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  n: () => (/* reexport */ getED25519Key)
});

;// external "@toruslabs/tweetnacl-js"
const tweetnacl_js_namespaceObject = require("@toruslabs/tweetnacl-js");
var tweetnacl_js_default = /*#__PURE__*/__webpack_require__.n(tweetnacl_js_namespaceObject);
;// ./src/ed25519/utils.ts

// eslint-disable-next-line @typescript-eslint/no-explicit-any
const l = (tweetnacl_js_default()).lowlevel;
function getED25519Key(privateKey) {
  let privKey;
  if (typeof privateKey === "string") {
    privKey = Buffer.from(privateKey, "hex");
  } else {
    privKey = privateKey;
  }
  // Implementation copied from tweetnacl

  const d = new Uint8Array(64);
  const p = [l.gf(), l.gf(), l.gf(), l.gf()];
  const sk = new Uint8Array([...new Uint8Array(privKey), ...new Uint8Array(32)]);
  const pk = new Uint8Array(32);
  l.crypto_hash(d, sk, 32);
  d[0] &= 248;
  d[31] &= 127;
  d[31] |= 64;
  l.scalarbase(p, d);
  l.pack(pk, p);
  for (let i = 0; i < 32; i += 1) sk[i + 32] = pk[i];
  return {
    sk: Buffer.from(sk),
    pk: Buffer.from(pk)
  };
}
;// ./src/ed25519/index.ts


/***/ }),

/***/ 698:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: () => (/* binding */ BasePostMessageStream)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(990);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(741);
/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(readable_stream__WEBPACK_IMPORTED_MODULE_1__);


function noop() {
  return undefined;
}
const SYN = "SYN";
const ACK = "ACK";
const BRK = "BRK";
class BasePostMessageStream extends readable_stream__WEBPACK_IMPORTED_MODULE_1__.Duplex {
  constructor({
    name,
    target,
    targetWindow = window,
    targetOrigin = "*"
  }) {
    super({
      objectMode: true
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_init", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_haveSyn", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_name", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_target", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_targetWindow", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_targetOrigin", void 0);
    // eslint-disable-next-line @typescript-eslint/no-explicit-any
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_onMessage", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_synIntervalId", void 0);
    if (!name || !target) {
      throw new Error("Invalid input.");
    }
    this._init = false;
    this._haveSyn = false;
    this._name = name;
    this._target = target; // target origin
    this._targetWindow = targetWindow;
    this._targetOrigin = targetOrigin;
    this._onMessage = this.onMessage.bind(this);
    this._synIntervalId = null;
    window.addEventListener("message", this._onMessage, false);
    this._handShake();
  }
  _break() {
    this.cork();
    this._write(BRK, null, noop);
    this._haveSyn = false;
    this._init = false;
  }
  _handShake() {
    this._write(SYN, null, noop);
    this.cork();
  }
  _onData(data) {
    if (!this._init) {
      // listen for handshake
      if (data === SYN) {
        this._haveSyn = true;
        this._write(ACK, null, noop);
      } else if (data === ACK) {
        this._init = true;
        if (!this._haveSyn) {
          this._write(ACK, null, noop);
        }
        this.uncork();
      }
    } else if (data === BRK) {
      this._break();
    } else {
      // forward message
      try {
        this.push(data);
      } catch (err) {
        this.emit("error", err);
      }
    }
  }
  _postMessage(data) {
    const originConstraint = this._targetOrigin;
    this._targetWindow.postMessage({
      target: this._target,
      data
    }, originConstraint);
  }
  onMessage(event) {
    const message = event.data;

    // validate message
    if (this._targetOrigin !== "*" && event.origin !== this._targetOrigin || event.source !== this._targetWindow || typeof message !== "object" || message.target !== this._name || !message.data) {
      return;
    }
    this._onData(message.data);
  }
  _read() {
    return undefined;
  }

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  _write(data, _, cb) {
    this._postMessage(data);
    cb();
  }
  _destroy() {
    window.removeEventListener("message", this._onMessage, false);
  }
}

/***/ }),

/***/ 197:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   B: () => (/* binding */ EthereumProviderError),
/* harmony export */   G: () => (/* binding */ JsonRpcError)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(990);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(824);
/* harmony import */ var json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(947);




/**
 * Check if the given code is a valid JSON-RPC error code.
 *
 * @param code - The code to check.
 * @returns Whether the code is valid.
 */
function isValidEthProviderCode(code) {
  return Number.isInteger(code) && code >= 1000 && code <= 4999;
}

/**
 * A JSON replacer function that omits circular references.
 *
 * @param _ - The key being replaced.
 * @param value - The value being replaced.
 * @returns The value to use in place of the original value.
 */
function stringifyReplacer(_, value) {
  if (value === "[Circular]") {
    return undefined;
  }
  return value;
}

/**
 * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors
 * per EIP-1474.
 *
 * Permits any integer error code.
 */
class JsonRpcError extends Error {
  constructor(code, message, data) {
    if (!Number.isInteger(code)) {
      throw new Error('"code" must be an integer.');
    }
    if (!message || typeof message !== "string") {
      throw new Error('"message" must be a non-empty string.');
    }
    if ((0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .dataHasCause */ .el)(data)) {
      super(message, {
        cause: data.cause
      });

      // Browser backwards-compatibility fallback
      // The `cause` definition can be removed when tsconfig lib and/or target have changed to >=es2022
      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "cause", void 0);
      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "code", void 0);
      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "data", void 0);
      if (!Object.hasOwn(this, "cause")) {
        Object.assign(this, {
          cause: data.cause
        });
      }
    } else {
      super(message);
      // The `cause` definition can be removed when tsconfig lib and/or target have changed to >=es2022
      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "cause", void 0);
      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "code", void 0);
      _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "data", void 0);
    }
    if (data !== undefined) {
      this.data = data;
    }
    this.code = code;
    this.cause = data === null || data === void 0 ? void 0 : data.cause;
  }

  /**
   * Get the error as JSON-serializable object.
   *
   * @returns A plain object with all public class properties.
   */
  serialize() {
    const serialized = {
      code: this.code,
      message: this.message
    };
    if (this.data !== undefined) {
      // `this.data` is not guaranteed to be a plain object, but this simplifies
      // the type guard below. We can safely cast it because we know it's a
      // JSON-serializable value.
      serialized.data = this.data;
      if ((0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .isPlainObject */ .Qd)(this.data)) {
        serialized.data.cause = (0,_utils__WEBPACK_IMPORTED_MODULE_2__/* .serializeCause */ ._K)(this.data.cause);
      }
    }
    if (this.stack) {
      serialized.stack = this.stack;
    }
    return serialized;
  }

  /**
   * Get a string representation of the serialized error, omitting any circular
   * references.
   *
   * @returns A string representation of the serialized error.
   */
  toString() {
    return json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default()(this.serialize(), {
      replacer: stringifyReplacer,
      space: 2
    });
  }
}

/**
 * Error subclass implementing Ethereum Provider errors per EIP-1193.
 * Permits integer error codes in the [ 1000 <= 4999 ] range.
 */
class EthereumProviderError extends JsonRpcError {
  /**
   * Create an Ethereum Provider JSON-RPC error.
   *
   * @param code - The JSON-RPC error code. Must be an integer in the
   * `1000 <= n <= 4999` range.
   * @param message - The JSON-RPC error message.
   * @param data - Optional data to include in the error.
   */
  constructor(code, message, data) {
    if (!isValidEthProviderCode(code)) {
      throw new Error('"code" must be an integer such that: 1000 <= code <= 4999');
    }
    super(code, message, data);
  }
}

/***/ }),

/***/ 404:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   f: () => (/* binding */ errorCodes),
/* harmony export */   z: () => (/* binding */ errorValues)
/* harmony export */ });
const errorCodes = {
  rpc: {
    invalidInput: -32000,
    resourceNotFound: -32001,
    resourceUnavailable: -32002,
    transactionRejected: -32003,
    methodNotSupported: -32004,
    limitExceeded: -32005,
    parse: -32700,
    invalidRequest: -32600,
    methodNotFound: -32601,
    invalidParams: -32602,
    internal: -32603
  },
  provider: {
    userRejectedRequest: 4001,
    unauthorized: 4100,
    unsupportedMethod: 4200,
    disconnected: 4900,
    chainDisconnected: 4901
  }
};
const errorValues = {
  "-32700": {
    standard: "JSON RPC 2.0",
    message: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."
  },
  "-32600": {
    standard: "JSON RPC 2.0",
    message: "The JSON sent is not a valid Request object."
  },
  "-32601": {
    standard: "JSON RPC 2.0",
    message: "The method does not exist / is not available."
  },
  "-32602": {
    standard: "JSON RPC 2.0",
    message: "Invalid method parameter(s)."
  },
  "-32603": {
    standard: "JSON RPC 2.0",
    message: "Internal JSON-RPC error."
  },
  "-32000": {
    standard: "EIP-1474",
    message: "Invalid input."
  },
  "-32001": {
    standard: "EIP-1474",
    message: "Resource not found."
  },
  "-32002": {
    standard: "EIP-1474",
    message: "Resource unavailable."
  },
  "-32003": {
    standard: "EIP-1474",
    message: "Transaction rejected."
  },
  "-32004": {
    standard: "EIP-1474",
    message: "Method not supported."
  },
  "-32005": {
    standard: "EIP-1474",
    message: "Request limit exceeded."
  },
  "4001": {
    standard: "EIP-1193",
    message: "User rejected the request."
  },
  "4100": {
    standard: "EIP-1193",
    message: "The requested account and/or method has not been authorized by the user."
  },
  "4200": {
    standard: "EIP-1193",
    message: "The requested method is not supported by this Ethereum provider."
  },
  "4900": {
    standard: "EIP-1193",
    message: "The provider is disconnected from all chains."
  },
  "4901": {
    standard: "EIP-1193",
    message: "The provider is disconnected from the specified chain."
  }
};

/***/ }),

/***/ 843:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   P: () => (/* binding */ providerErrors),
/* harmony export */   r: () => (/* binding */ rpcErrors)
/* harmony export */ });
/* harmony import */ var _error_classes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(197);
/* harmony import */ var _error_constants__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(404);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(947);



/**
 * Get an error message and optional data from an options bag.
 *
 * @param arg - The error message or options bag.
 * @returns A tuple containing the error message and optional data.
 */
function parseOpts(arg) {
  if (arg) {
    if (typeof arg === "string") {
      return [arg];
    } else if (typeof arg === "object" && !Array.isArray(arg)) {
      const {
        message,
        data
      } = arg;
      if (message && typeof message !== "string") {
        throw new Error("Must specify string message.");
      }
      return [message !== null && message !== void 0 ? message : undefined, data];
    }
  }
  return [];
}

/**
 * Get a generic JSON-RPC error class instance.
 *
 * @param code - The error code.
 * @param arg - The error message or options bag.
 * @returns An instance of the {@link JsonRpcError} class.
 */
function getJsonRpcError(code, arg) {
  const [message, data] = parseOpts(arg);
  return new _error_classes__WEBPACK_IMPORTED_MODULE_0__/* .JsonRpcError */ .G(code, message !== null && message !== void 0 ? message : (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .getMessageFromCode */ .DW)(code), data);
}

/**
 * Get an Ethereum Provider error class instance.
 *
 * @param code - The error code.
 * @param arg - The error message or options bag.
 * @returns An instance of the {@link EthereumProviderError} class.
 */
function getEthProviderError(code, arg) {
  const [message, data] = parseOpts(arg);
  return new _error_classes__WEBPACK_IMPORTED_MODULE_0__/* .EthereumProviderError */ .B(code, message !== null && message !== void 0 ? message : (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .getMessageFromCode */ .DW)(code), data);
}
const rpcErrors = {
  /**
   * Get a JSON RPC 2.0 Parse (-32700) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  parse: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.parse, arg),
  /**
   * Get a JSON RPC 2.0 Invalid Request (-32600) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  invalidRequest: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.invalidRequest, arg),
  /**
   * Get a JSON RPC 2.0 Invalid Params (-32602) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  invalidParams: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.invalidParams, arg),
  /**
   * Get a JSON RPC 2.0 Method Not Found (-32601) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  methodNotFound: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.methodNotFound, arg),
  /**
   * Get a JSON RPC 2.0 Internal (-32603) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  internal: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.internal, arg),
  /**
   * Get a JSON RPC 2.0 Server error.
   * Permits integer error codes in the [ -32099 <= -32005 ] range.
   * Codes -32000 through -32004 are reserved by EIP-1474.
   *
   * @param opts - The error options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  server: opts => {
    if (!opts || typeof opts !== "object" || Array.isArray(opts)) {
      throw new Error("Ethereum RPC Server errors must provide single object argument.");
    }
    const {
      code
    } = opts;
    if (!Number.isInteger(code) || code > -32005 || code < -32099) {
      throw new Error('"code" must be an integer such that: -32099 <= code <= -32005');
    }
    return getJsonRpcError(code, opts);
  },
  /**
   * Get an Ethereum JSON RPC Invalid Input (-32000) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  invalidInput: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.invalidInput, arg),
  /**
   * Get an Ethereum JSON RPC Resource Not Found (-32001) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  resourceNotFound: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.resourceNotFound, arg),
  /**
   * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  resourceUnavailable: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.resourceUnavailable, arg),
  /**
   * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  transactionRejected: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.transactionRejected, arg),
  /**
   * Get an Ethereum JSON RPC Method Not Supported (-32004) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  methodNotSupported: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.methodNotSupported, arg),
  /**
   * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link JsonRpcError} class.
   */
  limitExceeded: arg => getJsonRpcError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.rpc.limitExceeded, arg)
};
const providerErrors = {
  /**
   * Get an Ethereum Provider User Rejected Request (4001) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link EthereumProviderError} class.
   */
  userRejectedRequest: arg => {
    return getEthProviderError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.provider.userRejectedRequest, arg);
  },
  /**
   * Get an Ethereum Provider Unauthorized (4100) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link EthereumProviderError} class.
   */
  unauthorized: arg => {
    return getEthProviderError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.provider.unauthorized, arg);
  },
  /**
   * Get an Ethereum Provider Unsupported Method (4200) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link EthereumProviderError} class.
   */
  unsupportedMethod: arg => {
    return getEthProviderError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.provider.unsupportedMethod, arg);
  },
  /**
   * Get an Ethereum Provider Not Connected (4900) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link EthereumProviderError} class.
   */
  disconnected: arg => {
    return getEthProviderError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.provider.disconnected, arg);
  },
  /**
   * Get an Ethereum Provider Chain Not Connected (4901) error.
   *
   * @param arg - The error message or options bag.
   * @returns An instance of the {@link EthereumProviderError} class.
   */
  chainDisconnected: arg => {
    return getEthProviderError(_error_constants__WEBPACK_IMPORTED_MODULE_2__/* .errorCodes */ .f.provider.chainDisconnected, arg);
  },
  /**
   * Get a custom Ethereum Provider error.
   *
   * @param opts - The error options bag.
   * @returns An instance of the {@link EthereumProviderError} class.
   */
  custom: opts => {
    if (!opts || typeof opts !== "object" || Array.isArray(opts)) {
      throw new Error("Ethereum Provider custom errors must provide single object argument.");
    }
    const {
      code,
      message,
      data
    } = opts;
    if (!message || typeof message !== "string") {
      throw new Error('"message" must be a nonempty string');
    }
    return new _error_classes__WEBPACK_IMPORTED_MODULE_0__/* .EthereumProviderError */ .B(code, message, data);
  }
};

/***/ }),

/***/ 246:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AG: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.AG),
/* harmony export */   B: () => (/* reexport safe */ _error_classes__WEBPACK_IMPORTED_MODULE_0__.B),
/* harmony export */   DW: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.DW),
/* harmony export */   Gm: () => (/* reexport safe */ _error_classes__WEBPACK_IMPORTED_MODULE_0__.G),
/* harmony export */   Gv: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.Gv),
/* harmony export */   I5: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.I5),
/* harmony export */   P5: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.P5),
/* harmony export */   Pm: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_2__.P),
/* harmony export */   Qd: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.Qd),
/* harmony export */   Qh: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.Qh),
/* harmony export */   _K: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__._K),
/* harmony export */   el: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_3__.el),
/* harmony export */   fv: () => (/* reexport safe */ _error_constants__WEBPACK_IMPORTED_MODULE_1__.f),
/* harmony export */   rK: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_2__.r),
/* harmony export */   zI: () => (/* reexport safe */ _error_constants__WEBPACK_IMPORTED_MODULE_1__.z)
/* harmony export */ });
/* harmony import */ var _error_classes__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(197);
/* harmony import */ var _error_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(404);
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(843);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(947);





/***/ }),

/***/ 947:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AG: () => (/* binding */ JSON_RPC_SERVER_ERROR_MESSAGE),
/* harmony export */   DW: () => (/* binding */ getMessageFromCode),
/* harmony export */   Gv: () => (/* binding */ isObject),
/* harmony export */   I5: () => (/* binding */ isValidCode),
/* harmony export */   P5: () => (/* binding */ serializeError),
/* harmony export */   Qd: () => (/* binding */ isPlainObject),
/* harmony export */   Qh: () => (/* binding */ isValidString),
/* harmony export */   _K: () => (/* binding */ serializeCause),
/* harmony export */   el: () => (/* binding */ dataHasCause)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(846);
/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _error_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(404);


const FALLBACK_ERROR_CODE = _error_constants__WEBPACK_IMPORTED_MODULE_1__/* .errorCodes */ .f.rpc.internal;
const FALLBACK_MESSAGE = "Unspecified error message. This is a bug, please report it.";
const JSON_RPC_SERVER_ERROR_MESSAGE = "Unspecified server error.";
/**
 * Returns whether the given code is valid.
 * A code is valid if it is an integer.
 *
 * @param code - The error code.
 * @returns Whether the given code is valid.
 */
function isValidCode(code) {
  return Number.isInteger(code);
}
function isValidString(value) {
  return typeof value === "string" && value.length > 0;
}

/**
 * A type guard for {@link RuntimeObject}.
 *
 * @param value - The value to check.
 * @returns Whether the specified value has a runtime type of `object` and is
 * neither `null` nor an `Array`.
 */
function isObject(value) {
  return Boolean(value) && typeof value === "object" && !Array.isArray(value);
}

/**
 * Check if the value is plain object.
 *
 * @param value - Value to be checked.
 * @returns True if an object is the plain JavaScript object,
 * false if the object is not plain (e.g. function).
 */
function isPlainObject(value) {
  if (typeof value !== "object" || value === null) {
    return false;
  }
  try {
    let proto = value;
    while (Object.getPrototypeOf(proto) !== null) {
      proto = Object.getPrototypeOf(proto);
    }
    return Object.getPrototypeOf(value) === proto;
  } catch (_) {
    return false;
  }
}

/**
 * Check if the given code is a valid JSON-RPC server error code.
 *
 * @param code - The error code.
 * @returns Whether the given code is a valid JSON-RPC server error code.
 */
function isJsonRpcServerError(code) {
  return code >= -32099 && code <= -32000;
}
function isJsonRpcError(value) {
  const castValue = value;
  if (!castValue) return false;
  if (!isValidCode(castValue.code) || !isValidString(castValue.message)) return false;
  if (castValue.stack && !isValidString(castValue.stack)) return false;
  return true;
}

/**
 * Gets the message for a given code, or a fallback message if the code has
 * no corresponding message.
 *
 * @param code - The error code.
 * @param fallbackMessage - The fallback message to use if the code has no
 * corresponding message.
 * @returns The message for the given code, or the fallback message if the code
 * has no corresponding message.
 */
function getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {
  if (isValidCode(code)) {
    const codeString = code.toString();
    if (Object.hasOwn(_error_constants__WEBPACK_IMPORTED_MODULE_1__/* .errorValues */ .z, codeString)) {
      return _error_constants__WEBPACK_IMPORTED_MODULE_1__/* .errorValues */ .z[codeString].message;
    }
    if (isJsonRpcServerError(code)) {
      return JSON_RPC_SERVER_ERROR_MESSAGE;
    }
  }
  return fallbackMessage;
}
const FALLBACK_ERROR = {
  code: FALLBACK_ERROR_CODE,
  message: getMessageFromCode(FALLBACK_ERROR_CODE)
};
function isValidJson(str) {
  try {
    JSON.parse(JSON.stringify(str, (strKey, strVal) => {
      if (strKey === "__proto__" || strKey === "constructor") {
        throw new Error("Not valid json");
      }
      if (typeof strVal === "function" || typeof strVal === "symbol") {
        throw new Error("Not valid json");
      }
      return strVal;
    }), (propKey, propValue) => {
      // Strip __proto__ and constructor properties to prevent prototype pollution.
      if (propKey === "__proto__" || propKey === "constructor") {
        return undefined;
      }
      return propValue;
    });
    // this means, it's a valid json so far
  } catch (e) {
    return false;
  }
  return true;
}

/**
 * Extracts all JSON-serializable properties from an object.
 *
 * @param object - The object in question.
 * @returns An object containing all the JSON-serializable properties.
 */
function serializeObject(object) {
  return Object.getOwnPropertyNames(object).reduce((acc, key) => {
    const value = object[key];
    if (isValidJson(value)) {
      acc[key] = value;
    }
    return acc;
  }, {});
}

/**
 * Serializes an unknown error to be used as the `cause` in a fallback error.
 *
 * @param error - The unknown error.
 * @returns A JSON-serializable object containing as much information about the original error as possible.
 */
function serializeCause(error) {
  if (Array.isArray(error)) {
    return error.map(entry => {
      if (isValidJson(entry)) {
        return entry;
      } else if (isObject(entry)) {
        return serializeObject(entry);
      }
      return null;
    });
  } else if (isObject(error)) {
    return serializeObject(error);
  }
  if (isValidJson(error)) {
    return error;
  }
  return null;
}

/**
 * Construct a JSON-serializable object given an error and a JSON serializable `fallbackError`
 *
 * @param error - The error in question.
 * @param fallbackError - A JSON serializable fallback error.
 * @returns A JSON serializable error object.
 */
function buildError(error, fallbackError) {
  // If an error specifies a `serialize` function, we call it and return the result.
  if (error && typeof error === "object" && "serialize" in error && typeof error.serialize === "function") {
    return error.serialize();
  }
  if (isJsonRpcError(error)) {
    return error;
  }

  // If the error does not match the JsonRpcError type, use the fallback error, but try to include the original error as `cause`.
  const cause = serializeCause(error);
  const fallbackWithCause = _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default()({}, fallbackError), {}, {
    data: {
      cause
    }
  });
  return fallbackWithCause;
}

/**
 * Serializes the given error to an Ethereum JSON RPC-compatible error object.
 * If the given error is not fully compatible, it will be preserved on the
 * returned object's data.cause property.
 *
 * @param error - The error to serialize.
 * @param options - Options bag.
 * @param options.fallbackError - The error to return if the given error is
 * not compatible. Should be a JSON serializable value.
 * @param options.shouldIncludeStack - Whether to include the error's stack
 * on the returned object.
 * @returns The serialized error.
 */
function serializeError(error, {
  fallbackError = FALLBACK_ERROR,
  shouldIncludeStack = true
} = {}) {
  if (!isJsonRpcError(fallbackError)) {
    throw new Error("Must provide fallback error with integer number code and string message.");
  }
  const serialized = buildError(error, fallbackError);
  if (!shouldIncludeStack) {
    delete serialized.stack;
  }
  return serialized;
}

/**
 * Returns true if supplied error data has a usable `cause` property; false otherwise.
 *
 * @param data - Optional data to validate.
 * @returns Whether cause property is present and an object.
 */
function dataHasCause(data) {
  return isObject(data) && Object.hasOwn(data, "cause") && isObject(data.cause);
}

/***/ }),

/***/ 868:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   BasePostMessageStream: () => (/* reexport safe */ _basePostMessageStream__WEBPACK_IMPORTED_MODULE_0__.l),
/* harmony export */   EthereumProviderError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.B),
/* harmony export */   IGNORE_SUBSTREAM: () => (/* reexport safe */ _mux__WEBPACK_IMPORTED_MODULE_5__.W7),
/* harmony export */   JRPCEngine: () => (/* reexport safe */ _jrpcEngine__WEBPACK_IMPORTED_MODULE_4__.WJ),
/* harmony export */   JSON_RPC_SERVER_ERROR_MESSAGE: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.AG),
/* harmony export */   JsonRpcError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.Gm),
/* harmony export */   ObjectMultiplex: () => (/* reexport safe */ _mux__WEBPACK_IMPORTED_MODULE_5__.Wv),
/* harmony export */   PostMessageStream: () => (/* reexport safe */ _postMessageStream__WEBPACK_IMPORTED_MODULE_6__.Y),
/* harmony export */   SafeEventEmitter: () => (/* reexport safe */ _safeEventEmitter__WEBPACK_IMPORTED_MODULE_7__.C),
/* harmony export */   SerializableError: () => (/* reexport safe */ _serializableError__WEBPACK_IMPORTED_MODULE_8__.Y),
/* harmony export */   Substream: () => (/* reexport safe */ _substream__WEBPACK_IMPORTED_MODULE_9__.l),
/* harmony export */   createAsyncMiddleware: () => (/* reexport safe */ _jrpc__WEBPACK_IMPORTED_MODULE_3__.jg),
/* harmony export */   createEngineStream: () => (/* reexport safe */ _jrpcEngine__WEBPACK_IMPORTED_MODULE_4__.lr),
/* harmony export */   createErrorMiddleware: () => (/* reexport safe */ _jrpc__WEBPACK_IMPORTED_MODULE_3__.jh),
/* harmony export */   createIdRemapMiddleware: () => (/* reexport safe */ _jrpc__WEBPACK_IMPORTED_MODULE_3__.$R),
/* harmony export */   createLoggerMiddleware: () => (/* reexport safe */ _jrpc__WEBPACK_IMPORTED_MODULE_3__.BY),
/* harmony export */   createScaffoldMiddleware: () => (/* reexport safe */ _jrpc__WEBPACK_IMPORTED_MODULE_3__.ld),
/* harmony export */   createStreamMiddleware: () => (/* reexport safe */ _jrpc__WEBPACK_IMPORTED_MODULE_3__.dw),
/* harmony export */   dataHasCause: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.el),
/* harmony export */   errorCodes: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.fv),
/* harmony export */   errorValues: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.zI),
/* harmony export */   getMessageFromCode: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.DW),
/* harmony export */   getRpcPromiseCallback: () => (/* reexport safe */ _jrpc__WEBPACK_IMPORTED_MODULE_3__.m4),
/* harmony export */   isObject: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.Gv),
/* harmony export */   isPlainObject: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.Qd),
/* harmony export */   isValidCode: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.I5),
/* harmony export */   isValidString: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.Qh),
/* harmony export */   mergeMiddleware: () => (/* reexport safe */ _jrpcEngine__WEBPACK_IMPORTED_MODULE_4__.Vv),
/* harmony export */   providerAsMiddleware: () => (/* reexport safe */ _jrpcEngine__WEBPACK_IMPORTED_MODULE_4__.kl),
/* harmony export */   providerErrors: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.Pm),
/* harmony export */   providerFromEngine: () => (/* reexport safe */ _jrpcEngine__WEBPACK_IMPORTED_MODULE_4__.iR),
/* harmony export */   providerFromMiddleware: () => (/* reexport safe */ _jrpcEngine__WEBPACK_IMPORTED_MODULE_4__.iQ),
/* harmony export */   rpcErrors: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.rK),
/* harmony export */   serializeCause: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__._K),
/* harmony export */   serializeError: () => (/* reexport safe */ _errors__WEBPACK_IMPORTED_MODULE_1__.P5),
/* harmony export */   setupMultiplex: () => (/* reexport safe */ _mux__WEBPACK_IMPORTED_MODULE_5__.QW)
/* harmony export */ });
/* harmony import */ var _basePostMessageStream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(698);
/* harmony import */ var _errors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(246);
/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(862);
/* harmony import */ var _interfaces__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_interfaces__WEBPACK_IMPORTED_MODULE_2__);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _interfaces__WEBPACK_IMPORTED_MODULE_2__) if(["default","BasePostMessageStream","PostMessageStream","SafeEventEmitter","SerializableError","Substream","EthereumProviderError","JSON_RPC_SERVER_ERROR_MESSAGE","JsonRpcError","dataHasCause","errorCodes","errorValues","getMessageFromCode","isObject","isPlainObject","isValidCode","isValidString","providerErrors","rpcErrors","serializeCause","serializeError"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _interfaces__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _jrpc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(659);
/* harmony import */ var _jrpcEngine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(89);
/* harmony import */ var _mux__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(485);
/* harmony import */ var _postMessageStream__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(625);
/* harmony import */ var _safeEventEmitter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(837);
/* harmony import */ var _serializableError__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(491);
/* harmony import */ var _substream__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(346);











/***/ }),

/***/ 862:
/***/ (() => {



/***/ }),

/***/ 659:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   $R: () => (/* binding */ createIdRemapMiddleware),
/* harmony export */   BY: () => (/* binding */ createLoggerMiddleware),
/* harmony export */   dw: () => (/* binding */ createStreamMiddleware),
/* harmony export */   jg: () => (/* binding */ createAsyncMiddleware),
/* harmony export */   jh: () => (/* binding */ createErrorMiddleware),
/* harmony export */   ld: () => (/* binding */ createScaffoldMiddleware),
/* harmony export */   m4: () => (/* binding */ getRpcPromiseCallback)
/* harmony export */ });
/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(741);
/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(readable_stream__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _safeEventEmitter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(837);
/* harmony import */ var _serializableError__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(491);



const getRpcPromiseCallback = (resolve, reject, unwrapResult = true) => (error, response) => {
  if (error || response.error) {
    reject(error || response.error);
  } else if (!unwrapResult || Array.isArray(response)) {
    resolve(response);
  } else {
    resolve(response.result);
  }
};
function createErrorMiddleware(log) {
  return (req, res, next, end) => {
    try {
      // json-rpc-engine will terminate the request when it notices this error
      if (typeof req.method !== "string" || !req.method) {
        res.error = new _serializableError__WEBPACK_IMPORTED_MODULE_1__/* .SerializableError */ .Y({
          code: -32603,
          message: "invalid method"
        });
        end();
        return;
      }
      next(done => {
        const {
          error
        } = res;
        if (!error) {
          return done();
        }
        log.error(`Auth - RPC Error: ${error.message}`, error);
        return done();
      });
    } catch (error) {
      log.error(`Auth - RPC Error thrown: ${error.message}`, error);
      res.error = new _serializableError__WEBPACK_IMPORTED_MODULE_1__/* .SerializableError */ .Y({
        code: -32603,
        message: error.message
      });
      end();
    }
  };
}
function createStreamMiddleware() {
  const idMap = {};
  function readNoop() {
    return false;
  }
  const events = new _safeEventEmitter__WEBPACK_IMPORTED_MODULE_2__/* .SafeEventEmitter */ .C();
  function processResponse(res) {
    const context = idMap[res.id];
    if (!context) {
      throw new Error(`StreamMiddleware - Unknown response id "${res.id}"`);
    }
    delete idMap[res.id];
    // copy whole res onto original res
    Object.assign(context.res, res);
    // run callback on empty stack,
    // prevent internal stream-handler from catching errors
    setTimeout(context.end);
  }
  function processNotification(res) {
    events.emit("notification", res);
  }
  function processMessage(res, _encoding, cb) {
    let err;
    try {
      const isNotification = !res.id;
      if (isNotification) {
        processNotification(res);
      } else {
        processResponse(res);
      }
    } catch (_err) {
      err = _err;
    }
    // continue processing stream
    cb(err);
  }
  const stream = new readable_stream__WEBPACK_IMPORTED_MODULE_0__.Duplex({
    objectMode: true,
    read: readNoop,
    write: processMessage
  });
  const middleware = (req, res, next, end) => {
    // write req to stream
    stream.push(req);
    // register request on id map
    idMap[req.id] = {
      req,
      res,
      next,
      end
    };
  };
  return {
    events,
    middleware,
    stream
  };
}
function createScaffoldMiddleware(handlers) {
  return (req, res, next, end) => {
    const handler = handlers[req.method];
    // if no handler, return
    if (handler === undefined) {
      return next();
    }
    // if handler is fn, call as middleware
    if (typeof handler === "function") {
      return handler(req, res, next, end);
    }
    // if handler is some other value, use as result
    res.result = handler;
    return end();
  };
}
function createIdRemapMiddleware() {
  return (req, res, next, _end) => {
    const originalId = req.id;
    const newId = Math.random().toString(36).slice(2);
    req.id = newId;
    res.id = newId;
    next(done => {
      req.id = originalId;
      res.id = originalId;
      done();
    });
  };
}
function createLoggerMiddleware(logger) {
  return (req, res, next, _) => {
    logger.debug("REQ", req, "RES", res);
    next();
  };
}
function createAsyncMiddleware(asyncMiddleware) {
  return async (req, res, next, end) => {
    // nextPromise is the key to the implementation
    // it is resolved by the return handler passed to the
    // "next" function
    let resolveNextPromise;
    const nextPromise = new Promise(resolve => {
      resolveNextPromise = resolve;
    });
    let returnHandlerCallback = null;
    let nextWasCalled = false;

    // This will be called by the consumer's async middleware.
    const asyncNext = async () => {
      nextWasCalled = true;

      // We pass a return handler to next(). When it is called by the engine,
      // the consumer's async middleware will resume executing.

      next(runReturnHandlersCallback => {
        // This callback comes from JRPCEngine._runReturnHandlers
        returnHandlerCallback = runReturnHandlersCallback;
        resolveNextPromise();
      });
      await nextPromise;
    };
    try {
      await asyncMiddleware(req, res, asyncNext);
      if (nextWasCalled) {
        await nextPromise; // we must wait until the return handler is called
        returnHandlerCallback(null);
      } else {
        end(null);
      }
    } catch (err) {
      const error = err;
      if (returnHandlerCallback) {
        returnHandlerCallback(error);
      } else {
        end(error);
      }
    }
  };
}

/***/ }),

/***/ 89:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Vv: () => (/* binding */ mergeMiddleware),
/* harmony export */   WJ: () => (/* binding */ JRPCEngine),
/* harmony export */   iQ: () => (/* binding */ providerFromMiddleware),
/* harmony export */   iR: () => (/* binding */ providerFromEngine),
/* harmony export */   kl: () => (/* binding */ providerAsMiddleware),
/* harmony export */   lr: () => (/* binding */ createEngineStream)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(846);
/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(990);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(741);
/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(readable_stream__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _utils_logger__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(627);
/* harmony import */ var _errors_errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(843);
/* harmony import */ var _errors_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(947);
/* harmony import */ var _safeEventEmitter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(837);
/* harmony import */ var _serializableError__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(491);








function constructFallbackError(error) {
  const {
    message = "",
    code = -32603,
    stack = "Stack trace is not available.",
    data = ""
  } = error;
  const codeNumber = parseInt((code === null || code === void 0 ? void 0 : code.toString()) || "-32603");
  return {
    message: message || (error === null || error === void 0 ? void 0 : error.toString()) || (0,_errors_utils__WEBPACK_IMPORTED_MODULE_3__/* .getMessageFromCode */ .DW)(codeNumber),
    code: codeNumber,
    stack,
    data: data || message || (error === null || error === void 0 ? void 0 : error.toString())
  };
}

/**
 * A JSON-RPC request and response processor.
 * Give it a stack of middleware, pass it requests, and get back responses.
 */
class JRPCEngine extends _safeEventEmitter__WEBPACK_IMPORTED_MODULE_4__/* .SafeEventEmitter */ .C {
  constructor() {
    super();
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_1___default()(this, "_middleware", void 0);
    this._middleware = [];
  }

  /**
   * Serially executes the given stack of middleware.
   *
   * @returns An array of any error encountered during middleware execution,
   * a boolean indicating whether the request was completed, and an array of
   * middleware-defined return handlers.
   */
  static async _runAllMiddleware(req, res, middlewareStack) {
    const returnHandlers = [];
    let error = null;
    let isComplete = false;

    // Go down stack of middleware, call and collect optional returnHandlers
    for (const middleware of middlewareStack) {
      [error, isComplete] = await JRPCEngine._runMiddleware(req, res, middleware, returnHandlers);
      if (isComplete) {
        break;
      }
    }
    return [error, isComplete, returnHandlers.reverse()];
  }

  /**
   * Runs an individual middleware.
   *
   * @returns An array of any error encountered during middleware execution,
   * and a boolean indicating whether the request should end.
   */
  static _runMiddleware(req, res, middleware, returnHandlers) {
    return new Promise(resolve => {
      const end = err => {
        const error = err || res.error;
        if (error) {
          if (typeof error === "object" && Object.keys(error).includes("stack") === false) error.stack = "Stack trace is not available.";
          _utils_logger__WEBPACK_IMPORTED_MODULE_5__/* .loglevel */ .H.error(error);
          res.error = (0,_errors_utils__WEBPACK_IMPORTED_MODULE_3__/* .serializeError */ .P5)(error, {
            shouldIncludeStack: true,
            fallbackError: constructFallbackError(error)
          });
        }
        // True indicates that the request should end
        resolve([error, true]);
      };
      const next = returnHandler => {
        if (res.error) {
          end(res.error);
        } else {
          if (returnHandler) {
            if (typeof returnHandler !== "function") {
              end(new _serializableError__WEBPACK_IMPORTED_MODULE_6__/* .SerializableError */ .Y({
                code: -32603,
                message: "JRPCEngine: 'next' return handlers must be functions"
              }));
            }
            returnHandlers.push(returnHandler);
          }

          // False indicates that the request should not end
          resolve([null, false]);
        }
      };
      try {
        middleware(req, res, next, end);
      } catch (error) {
        end(error);
      }
    });
  }

  /**
   * Serially executes array of return handlers. The request and response are
   * assumed to be in their scope.
   */
  static async _runReturnHandlers(handlers) {
    for (const handler of handlers) {
      await new Promise((resolve, reject) => {
        handler(err => err ? reject(err) : resolve());
      });
    }
  }

  /**
   * Throws an error if the response has neither a result nor an error, or if
   * the "isComplete" flag is falsy.
   */
  static _checkForCompletion(_req, res, isComplete) {
    if (!("result" in res) && !("error" in res)) {
      throw new _serializableError__WEBPACK_IMPORTED_MODULE_6__/* .SerializableError */ .Y({
        code: -32603,
        message: "Response has no error or result for request"
      });
    }
    if (!isComplete) {
      throw new _serializableError__WEBPACK_IMPORTED_MODULE_6__/* .SerializableError */ .Y({
        code: -32603,
        message: "Nothing ended request"
      });
    }
  }

  /**
   * Add a middleware function to the engine's middleware stack.
   *
   * @param middleware - The middleware function to add.
   */
  push(middleware) {
    this._middleware.push(middleware);
  }

  /**
   * Handle a JSON-RPC request, and return a response.
   *
   * @param request - The request to handle.
   * @param callback - An error-first callback that will receive the response.
   */

  /**
   * Handle an array of JSON-RPC requests, and return an array of responses.
   *
   * @param request - The requests to handle.
   * @param callback - An error-first callback that will receive the array of
   * responses.
   */

  /**
   * Handle a JSON-RPC request, and return a response.
   *
   * @param request - The request to handle.
   * @returns A promise that resolves with the response, or rejects with an
   * error.
   */

  /**
   * Handle an array of JSON-RPC requests, and return an array of responses.
   *
   * @param request - The requests to handle.
   * @returns A promise that resolves with the array of responses, or rejects
   * with an error.
   */

  // eslint-disable-next-line @typescript-eslint/no-explicit-any
  handle(req, cb) {
    if (cb && typeof cb !== "function") {
      throw new Error('"callback" must be a function if provided.');
    }
    if (Array.isArray(req)) {
      if (cb) {
        return this._handleBatch(req, cb);
      }
      return this._handleBatch(req);
    }
    if (cb) {
      return this._handle(req, cb);
    }
    return this._promiseHandle(req);
  }

  /**
   * Returns this engine as a middleware function that can be pushed to other
   * engines.
   *
   * @returns This engine as a middleware function.
   */
  asMiddleware() {
    return async (req, res, next, end) => {
      try {
        const [middlewareError, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);
        if (isComplete) {
          await JRPCEngine._runReturnHandlers(returnHandlers);
          return end(middlewareError);
        }
        return next(async handlerCallback => {
          try {
            await JRPCEngine._runReturnHandlers(returnHandlers);
          } catch (error) {
            return handlerCallback(error);
          }
          return handlerCallback();
        });
      } catch (error) {
        return end(error);
      }
    };
  }

  /**
   * Like _handle, but for batch requests.
   */

  /**
   * Like _handle, but for batch requests.
   */

  async _handleBatch(reqs, cb) {
    // The order here is important
    try {
      // 2. Wait for all requests to finish, or throw on some kind of fatal
      // error
      const responses = await Promise.all(
      // 1. Begin executing each request in the order received
      reqs.map(this._promiseHandle.bind(this)));

      // 3. Return batch response
      if (cb) {
        return cb(null, responses);
      }
      return responses;
    } catch (error) {
      if (cb) {
        return cb(error);
      }
      throw error;
    }
  }

  /**
   * A promise-wrapped _handle.
   */
  _promiseHandle(req) {
    return new Promise((resolve, reject) => {
      this._handle(req, (_err, res) => {
        // There will always be a response, and it will always have any error
        // that is caught and propagated.
        if (_err && res === undefined) {
          reject(_err);
        } else resolve(res);
      }).catch(reject);
    });
  }

  /**
   * Ensures that the request object is valid, processes it, and passes any
   * error and the response object to the given callback.
   *
   * Does not reject.
   */
  async _handle(callerReq, cb) {
    if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== "object") {
      const error = new _serializableError__WEBPACK_IMPORTED_MODULE_6__/* .SerializableError */ .Y({
        code: -32603,
        message: "request must be plain object"
      });
      return cb(error, {
        id: undefined,
        jsonrpc: "2.0",
        error
      });
    }
    if (typeof callerReq.method !== "string") {
      const error = new _serializableError__WEBPACK_IMPORTED_MODULE_6__/* .SerializableError */ .Y({
        code: -32603,
        message: "method must be string"
      });
      return cb(error, {
        id: callerReq.id,
        jsonrpc: "2.0",
        error
      });
    }
    const req = _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default()({}, callerReq);
    const res = {
      id: req.id,
      jsonrpc: req.jsonrpc
    };
    let error = null;
    try {
      await this._processRequest(req, res);
    } catch (_error) {
      // A request handler error, a re-thrown middleware error, or something
      // unexpected.
      error = _error;
    }
    if (error) {
      // Ensure no result is present on an errored response
      delete res.result;
      if (!res.error) {
        if (typeof error === "object" && Object.keys(error).includes("stack") === false) error.stack = "Stack trace is not available.";
        _utils_logger__WEBPACK_IMPORTED_MODULE_5__/* .loglevel */ .H.error(error);
        res.error = (0,_errors_utils__WEBPACK_IMPORTED_MODULE_3__/* .serializeError */ .P5)(error, {
          shouldIncludeStack: true,
          fallbackError: constructFallbackError(error)
        });
      }
    }
    return cb(error, res);
  }

  /**
   * For the given request and response, runs all middleware and their return
   * handlers, if any, and ensures that internal request processing semantics
   * are satisfied.
   */
  async _processRequest(req, res) {
    const [error, isComplete, returnHandlers] = await JRPCEngine._runAllMiddleware(req, res, this._middleware);

    // Throw if "end" was not called, or if the response has neither a result
    // nor an error.
    JRPCEngine._checkForCompletion(req, res, isComplete);

    // The return handlers should run even if an error was encountered during
    // middleware processing.
    await JRPCEngine._runReturnHandlers(returnHandlers);

    // Now we re-throw the middleware processing error, if any, to catch it
    // further up the call chain.
    if (error) {
      throw error;
    }
  }
}
function mergeMiddleware(middlewareStack) {
  const engine = new JRPCEngine();
  middlewareStack.forEach(middleware => {
    engine.push(middleware);
  });
  return engine.asMiddleware();
}
function createEngineStream(opts) {
  if (!opts || !opts.engine) {
    throw new Error("Missing engine parameter!");
  }
  const {
    engine
  } = opts;
  // eslint-disable-next-line prefer-const
  let stream;
  function read() {
    return undefined;
  }
  function write(req, _encoding, cb) {
    engine.handle(req, (_err, res) => {
      stream.push(res);
    });
    cb();
  }
  stream = new readable_stream__WEBPACK_IMPORTED_MODULE_2__.Duplex({
    objectMode: true,
    read,
    write
  });

  // forward notifications
  if (engine.on) {
    engine.on("notification", message => {
      stream.push(message);
    });
  }
  return stream;
}
function providerFromEngine(engine) {
  const provider = new _safeEventEmitter__WEBPACK_IMPORTED_MODULE_4__/* .SafeEventEmitter */ .C();
  // handle both rpc send methods
  provider.sendAsync = async req => {
    const res = await engine.handle(req);
    if (res.error) {
      if (typeof res.error === "object" && Object.keys(res.error).includes("stack") === false) res.error.stack = "Stack trace is not available.";
      _utils_logger__WEBPACK_IMPORTED_MODULE_5__/* .loglevel */ .H.error(res.error);
      const err = (0,_errors_utils__WEBPACK_IMPORTED_MODULE_3__/* .serializeError */ .P5)(res.error, {
        fallbackError: constructFallbackError(res.error),
        shouldIncludeStack: true
      });
      throw _errors_errors__WEBPACK_IMPORTED_MODULE_7__/* .rpcErrors */ .r.internal(err);
    }
    return res.result;
  };
  provider.send = (req, callback) => {
    if (typeof callback !== "function") {
      throw new Error('Must provide callback to "send" method.');
    }
    engine.handle(req, callback);
  };
  // forward notifications
  if (engine.on) {
    engine.on("notification", message => {
      provider.emit("data", null, message);
    });
  }
  provider.request = async args => {
    const req = _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default()({}, args), {}, {
      id: Math.random().toString(36).slice(2),
      jsonrpc: "2.0"
    });
    const res = await provider.sendAsync(req);
    return res;
  };
  return provider;
}
function providerFromMiddleware(middleware) {
  const engine = new JRPCEngine();
  engine.push(middleware);
  const provider = providerFromEngine(engine);
  return provider;
}
function providerAsMiddleware(provider) {
  return async (req, res, _next, end) => {
    // send request to provider
    try {
      const providerRes = await provider.sendAsync(req);
      res.result = providerRes;
      return end();
    } catch (error) {
      return end(error);
    }
  };
}

/***/ }),

/***/ 485:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  W7: () => (/* binding */ IGNORE_SUBSTREAM),
  Wv: () => (/* binding */ ObjectMultiplex),
  QW: () => (/* binding */ setupMultiplex)
});

// EXTERNAL MODULE: external "@babel/runtime/helpers/objectSpread2"
var objectSpread2_ = __webpack_require__(846);
var objectSpread2_default = /*#__PURE__*/__webpack_require__.n(objectSpread2_);
// EXTERNAL MODULE: external "@babel/runtime/helpers/defineProperty"
var defineProperty_ = __webpack_require__(990);
var defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty_);
;// external "end-of-stream"
const external_end_of_stream_namespaceObject = require("end-of-stream");
var external_end_of_stream_default = /*#__PURE__*/__webpack_require__.n(external_end_of_stream_namespaceObject);
;// external "once"
const external_once_namespaceObject = require("once");
var external_once_default = /*#__PURE__*/__webpack_require__.n(external_once_namespaceObject);
;// external "pump"
const external_pump_namespaceObject = require("pump");
var external_pump_default = /*#__PURE__*/__webpack_require__.n(external_pump_namespaceObject);
// EXTERNAL MODULE: external "readable-stream"
var external_readable_stream_ = __webpack_require__(741);
// EXTERNAL MODULE: ./src/jrpc/substream.ts
var jrpc_substream = __webpack_require__(346);
;// ./src/jrpc/mux.ts







const IGNORE_SUBSTREAM = Symbol("IGNORE_SUBSTREAM");
class ObjectMultiplex extends external_readable_stream_.Duplex {
  constructor(opts = {}) {
    super(objectSpread2_default()(objectSpread2_default()({}, opts), {}, {
      objectMode: true
    }));
    defineProperty_default()(this, "_substreams", void 0);
    defineProperty_default()(this, "getStream", void 0);
    this._substreams = {};
  }
  createStream(name) {
    // validate name
    if (!name) {
      throw new Error("ObjectMultiplex - name must not be empty");
    }
    if (this._substreams[name]) {
      throw new Error(`ObjectMultiplex - Substream for name "${name}" already exists`);
    }

    // create substream
    const substream = new jrpc_substream/* Substream */.l({
      parent: this,
      name
    });
    this._substreams[name] = substream;

    // listen for parent stream to end
    // eslint-disable-next-line @typescript-eslint/no-use-before-define
    anyStreamEnd(this, _error => substream.destroy(_error || undefined));
    return substream;
  }

  // ignore streams (dont display orphaned data warning)
  ignoreStream(name) {
    // validate name
    if (!name) {
      throw new Error("ObjectMultiplex - name must not be empty");
    }
    if (this._substreams[name]) {
      throw new Error(`ObjectMultiplex - Substream for name "${name}" already exists`);
    }
    // set
    this._substreams[name] = IGNORE_SUBSTREAM;
  }
  _read() {
    return undefined;
  }
  _write(chunk, _encoding, callback) {
    const {
      name,
      data
    } = chunk;
    if (!name) {
      window.console.warn(`ObjectMultiplex - malformed chunk without name "${chunk}"`);
      return callback();
    }

    // get corresponding substream
    const substream = this._substreams[name];
    if (!substream) {
      window.console.warn(`ObjectMultiplex - orphaned data for stream "${name}"`);
      return callback();
    }

    // push data into substream
    if (substream !== IGNORE_SUBSTREAM) {
      substream.push(data);
    }
    return callback();
  }
}

// util
function anyStreamEnd(stream, _cb) {
  const cb = external_once_default()(_cb);
  external_end_of_stream_default()(stream, {
    readable: false
  }, cb);
  external_end_of_stream_default()(stream, {
    writable: false
  }, cb);
}
function setupMultiplex(stream) {
  const mux = new ObjectMultiplex();
  mux.getStream = function streamHelper(name) {
    if (this._substreams[name]) {
      return this._substreams[name];
    }
    return this.createStream(name);
  };
  external_pump_default()(stream, mux, stream, err => {
    if (err) window.console.error(err);
  });
  return mux;
}

/***/ }),

/***/ 625:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: () => (/* binding */ PostMessageStream)
/* harmony export */ });
/* harmony import */ var _basePostMessageStream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(698);

class PostMessageStream extends _basePostMessageStream__WEBPACK_IMPORTED_MODULE_0__/* .BasePostMessageStream */ .l {
  _postMessage(data) {
    let originConstraint = this._targetOrigin;
    if (typeof data === "object") {
      const dataObj = data;
      if (typeof dataObj.data === "object") {
        const dataObjData = dataObj.data;
        if (Array.isArray(dataObjData.params) && dataObjData.params.length > 0) {
          const dataObjDataParam = dataObjData.params[0];
          if (dataObjDataParam._origin) {
            originConstraint = dataObjDataParam._origin;
          }

          // add a constraint for the response
          dataObjDataParam._origin = window.location.origin;
        }
      }
    }
    this._targetWindow.postMessage({
      target: this._target,
      data
    }, originConstraint);
  }
}

/***/ }),

/***/ 837:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   C: () => (/* binding */ SafeEventEmitter)
/* harmony export */ });
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(735);
/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);
/* eslint-disable @typescript-eslint/no-explicit-any */

function safeApply(handler, context, args) {
  try {
    Reflect.apply(handler, context, args);
  } catch (err) {
    // Throw error after timeout so as not to interrupt the stack
    setTimeout(() => {
      throw err;
    });
  }
}
function arrayClone(arr) {
  const n = arr.length;
  const copy = new Array(n);
  for (let i = 0; i < n; i += 1) {
    copy[i] = arr[i];
  }
  return copy;
}
class SafeEventEmitter extends events__WEBPACK_IMPORTED_MODULE_0__.EventEmitter {
  emit(type, ...args) {
    let doError = type === "error";
    const events = this._events;
    if (events !== undefined) {
      doError = doError && events.error === undefined;
    } else if (!doError) {
      return false;
    }

    // If there is no 'error' event listener then throw.
    if (doError) {
      let er;
      if (args.length > 0) {
        [er] = args;
      }
      if (er instanceof Error) {
        // Note: The comments on the `throw` lines are intentional, they show
        // up in Node's output if this results in an unhandled exception.
        throw er; // Unhandled 'error' event
      }
      // At least give some kind of context to the user
      const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ""}`);
      err.context = er;
      throw err; // Unhandled 'error' event
    }
    const handler = events[type];
    if (handler === undefined) {
      return false;
    }
    if (typeof handler === "function") {
      safeApply(handler, this, args);
    } else {
      const len = handler.length;
      const listeners = arrayClone(handler);
      for (let i = 0; i < len; i += 1) {
        safeApply(listeners[i], this, args);
      }
    }
    return true;
  }
}

/***/ }),

/***/ 491:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Y: () => (/* binding */ SerializableError)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(990);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(824);
/* harmony import */ var json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(json_stable_stringify__WEBPACK_IMPORTED_MODULE_1__);


class SerializableError extends Error {
  constructor({
    code,
    message,
    data
  }) {
    if (!Number.isInteger(code)) {
      throw new Error("code must be an integer");
    }
    if (!message || typeof message !== "string") {
      throw new Error("message must be string");
    }
    super(message);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "code", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "data", void 0);
    this.code = code;
    if (data !== undefined) {
      this.data = data;
    }
  }
  toString() {
    return json_stable_stringify__WEBPACK_IMPORTED_MODULE_1___default()({
      code: this.code,
      message: this.message,
      data: this.data,
      stack: this.stack
    });
  }
}

/***/ }),

/***/ 346:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   l: () => (/* binding */ Substream)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(990);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(741);
/* harmony import */ var readable_stream__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(readable_stream__WEBPACK_IMPORTED_MODULE_1__);

/* eslint-disable @typescript-eslint/no-explicit-any */

class Substream extends readable_stream__WEBPACK_IMPORTED_MODULE_1__.Duplex {
  constructor({
    parent,
    name
  }) {
    super({
      objectMode: true
    });
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_parent", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_name", void 0);
    this._parent = parent;
    this._name = name;
  }

  /**
   * Explicitly sets read operations to a no-op.
   */
  _read() {
    return undefined;
  }

  /**
   * Called when data should be written to this writable stream.
   *
   * @param chunk - Arbitrary object to write
   * @param encoding - Encoding to use when writing payload
   * @param callback - Called when writing is complete or an error occurs
   */
  _write(chunk, _encoding, callback) {
    this._parent.push({
      name: this._name,
      data: chunk
    });
    callback();
  }
}

/***/ }),

/***/ 887:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  hk: () => (/* reexport */ STARKNET_NETWORKS),
  Nh: () => (/* reexport */ getStarkHDAccount),
  yN: () => (/* binding */ starkEc),
  tr: () => (/* binding */ starkGrindKey),
  IG: () => (/* binding */ starkPedersen),
  Br: () => (/* binding */ starkSign),
  Bl: () => (/* binding */ starkVerify)
});

;// external "@toruslabs/starkware-crypto"
const starkware_crypto_namespaceObject = require("@toruslabs/starkware-crypto");
;// external "@ethereumjs/util"
const util_namespaceObject = require("@ethereumjs/util");
;// external "bip39"
const external_bip39_namespaceObject = require("bip39");
;// external "enc-utils"
const external_enc_utils_namespaceObject = require("enc-utils");
;// ./src/starkey/utils.ts




const STARKNET_NETWORKS = {
  mainnet: "mainnet",
  testnet: "testnet"
};
const STARKNET_NETWORK_ID_MAP = {
  [STARKNET_NETWORKS.mainnet]: 0,
  [STARKNET_NETWORKS.testnet]: 100001
};
function isHexPrefixed(str) {
  return (str || "").substring(0, 2) === "0x";
}

/*
 Returns an integer from a given section of bits out of a hex string.
 hex is the target hex string to slice.
 start represents the index of the first bit to cut from the hex string (binary) in LSB order.
 end represents the index of the last bit to cut from the hex string.
*/
function getIntFromBits(hex, start, end) {
  const bin = (0,external_enc_utils_namespaceObject.hexToBinary)(hex);
  const bits = bin.slice(start, end);
  const int = (0,external_enc_utils_namespaceObject.binaryToNumber)(bits);
  return int;
}

/**
 * param- privKey secp256k1 private key in hex format
 * param- accountIndex accountIndex represents an index of the possible associated wallets derived from the seed.
 * param- starknetType corresponding startnet network (refer to STARKNET_NETWORKS type for possible values)
 * returns Calculates the stark key pair based on the STARTNET_NETWORK_TYPE and a given index.
 */
function getStarkHDAccount(privKey, accountIndex, starknetType) {
  if (!STARKNET_NETWORK_ID_MAP[starknetType]) {
    throw new Error(`Invalid starknet network specified:- ${starknetType}`);
  }
  const privKeyBuffer = Buffer.from(privKey, "hex");
  if (privKeyBuffer.length !== 32) {
    throw new Error("Invalid privKey size");
  }
  const ethAddress = Buffer.from((0,util_namespaceObject.privateToAddress)(privKeyBuffer)).toString("hex");
  const sanitizedEthAddr = isHexPrefixed(ethAddress) ? ethAddress : `0x${ethAddress}`;
  const mnemonic = (0,external_bip39_namespaceObject.entropyToMnemonic)(privKey);
  const application = STARKNET_NETWORK_ID_MAP[starknetType];

  // Draws the 31 LSBs of the eth address.
  const ethAddressInt1 = getIntFromBits(sanitizedEthAddr, -31);
  // Draws the following 31 LSBs of the eth address.
  const ethAddressInt2 = getIntFromBits(sanitizedEthAddr, -62, -31);
  const accountPath = `m/2645'/1195502025'/${application}'/${ethAddressInt1}'/${ethAddressInt2}'/${accountIndex}`;
  const keyPair = (0,starkware_crypto_namespaceObject.getKeyPairFromPath)(mnemonic, accountPath);
  return keyPair;
}
;// ./src/starkey/index.ts

const starkEc = starkware_crypto_namespaceObject.ec;
const starkGrindKey = starkware_crypto_namespaceObject.grindKey;
const starkPedersen = starkware_crypto_namespaceObject.pedersen;
const starkSign = starkware_crypto_namespaceObject.sign;
const starkVerify = starkware_crypto_namespaceObject.verify;


/***/ }),

/***/ 74:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  QC: () => (/* reexport */ SECP256K1_CURVE_N),
  qP: () => (/* reexport */ mimcGetConstants),
  tL: () => (/* reexport */ mimcHash),
  qM: () => (/* reexport */ mimcMultiHash),
  Ao: () => (/* reexport */ mimgGetIV),
  CS: () => (/* reexport */ subkey)
});

;// external "bn.js"
const external_bn_js_namespaceObject = require("bn.js");
var external_bn_js_default = /*#__PURE__*/__webpack_require__.n(external_bn_js_namespaceObject);
;// external "@toruslabs/ffjavascript"
const ffjavascript_namespaceObject = require("@toruslabs/ffjavascript");
;// external "@toruslabs/metadata-helpers"
const metadata_helpers_namespaceObject = require("@toruslabs/metadata-helpers");
;// ./src/subkey/mimcsponge.ts
/* eslint-disable @typescript-eslint/no-explicit-any */




const F = new ffjavascript_namespaceObject.ZqField(ffjavascript_namespaceObject.Scalar.fromString("21888242871839275222246405745257275088548364400416034343698204186575808495617"));
const SEED = "mimcsponge";
const NROUNDS = 220;
function keccak256Padded(str) {
  let finalInput = Buffer.from(str, "utf8");
  if (typeof str === "string" && str.slice(0, 2) === "0x" && str.length === 66) {
    finalInput = Buffer.from(str.slice(2), "hex");
  }
  return `0x${(0,metadata_helpers_namespaceObject.keccak256)(finalInput).toString("hex").padStart(64, "0")}`;
}
function mimgGetIV(seed) {
  let _seed = seed;
  if (typeof _seed === "undefined") _seed = SEED;
  const c = keccak256Padded(`${_seed}_iv`);
  const cn = ffjavascript_namespaceObject.Scalar.fromString(new (external_bn_js_default())(c, 16).toString());
  const iv = cn.mod(F.p);
  return iv;
}
function mimcGetConstants(seed, nRounds) {
  let _seed = seed;
  let _nRounds = nRounds;
  if (typeof _seed === "undefined") _seed = SEED;
  if (typeof nRounds === "undefined") _nRounds = NROUNDS;
  const cts = new Array(_nRounds);
  let c = keccak256Padded(SEED);
  for (let i = 1; i < _nRounds; i += 1) {
    c = keccak256Padded(c);
    const n1 = new (external_bn_js_default())(c.slice(2), 16).mod(new (external_bn_js_default())(F.p.toString()));
    const c2 = n1.toString(16, 64);
    cts[i] = F.e(new (external_bn_js_default())(c2, 16).toString());
  }
  cts[0] = F.e(0);
  cts[cts.length - 1] = F.e(0);
  return cts;
}
const cts = mimcGetConstants(SEED, NROUNDS);
function mimcHash(_xL_in, _xR_in, _k) {
  let xL = F.e(_xL_in);
  let xR = F.e(_xR_in);
  const k = F.e(_k);
  for (let i = 0; i < NROUNDS; i += 1) {
    const c = cts[i];
    const t = i === 0 ? F.add(xL, k) : F.add(F.add(xL, k), c);
    const xR_tmp = F.e(xR);
    if (i < NROUNDS - 1) {
      xR = xL;
      xL = F.add(xR_tmp, F.pow(t, 5));
    } else {
      xR = F.add(xR_tmp, F.pow(t, 5));
    }
  }
  return {
    xL: F.normalize(xL),
    xR: F.normalize(xR)
  };
}
function mimcMultiHash(arr, key, numOutputs) {
  let _key = key;
  let _numOutputs = numOutputs;
  if (typeof _numOutputs === "undefined") {
    _numOutputs = 1;
  }
  if (typeof _key === "undefined") {
    _key = F.zero;
  }
  let R = F.zero;
  let C = F.zero;
  for (let i = 0; i < arr.length; i += 1) {
    R = F.add(R, F.e(arr[i]));
    const S = mimcHash(R, C, _key);
    R = S.xL;
    C = S.xR;
  }
  const outputs = [R];
  for (let i = 1; i < _numOutputs; i += 1) {
    const S = mimcHash(R, C, _key);
    R = S.xL;
    C = S.xR;
    outputs.push(R);
  }
  if (_numOutputs === 1) {
    return F.normalize(outputs[0]);
  }
  return outputs.map(x => F.normalize(x));
}
;// ./src/subkey/keyDerivation.ts


const SECP256K1_CURVE_N = "fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141";

// creates sub-keys via MiMC hash, output keys are not padded
function subkey(keyHex, input) {
  const privKeyBuf = new (external_bn_js_default())(keyHex, "hex").toString(10);
  // TODO: check against existing usage of mimc
  // TODO: check that MPC is possible with mimc, with tests
  const inputPath = new (external_bn_js_default())(input).umod(new (external_bn_js_default())(SECP256K1_CURVE_N, "hex")).toString(10);
  const output = mimcHash(1, privKeyBuf, inputPath);
  return output.xL.toString(16);
}
;// ./src/subkey/index.ts



/***/ }),

/***/ 69:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   n: () => (/* binding */ MemoryStore),
/* harmony export */   s: () => (/* binding */ BrowserStorage)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(990);
/* harmony import */ var _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(709);

var _BrowserStorage;

class MemoryStore {
  constructor() {
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "store", new Map());
  }
  getItem(key) {
    return this.store.get(key) || null;
  }
  setItem(key, value) {
    this.store.set(key, value);
  }
  removeItem(key) {
    this.store.delete(key);
  }
}
class BrowserStorage {
  constructor(storeKey, storage) {
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "storage", void 0);
    _babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(this, "_storeKey", void 0);
    this.storage = storage;
    this._storeKey = storeKey;
    try {
      if (!storage.getItem(storeKey)) {
        this.resetStore();
      }
    } catch (error) {
      // Storage is not available
    }
  }
  static getInstance(key, storageKey = "local") {
    if (!this.instanceMap.has(key)) {
      let storage;
      if (storageKey === "local" && (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .storageAvailable */ .VS)("localStorage")) {
        storage = window.localStorage;
      } else if (storageKey === "session" && (0,_utils__WEBPACK_IMPORTED_MODULE_1__/* .storageAvailable */ .VS)("sessionStorage")) {
        storage = window.sessionStorage;
      } else {
        storage = new MemoryStore();
      }
      this.instanceMap.set(key, new this(key, storage));
    }
    return this.instanceMap.get(key);
  }
  toJSON() {
    return this.storage.getItem(this._storeKey);
  }
  resetStore() {
    const currStore = this.getStore();
    this.storage.removeItem(this._storeKey);
    return currStore;
  }
  getStore() {
    return JSON.parse(this.storage.getItem(this._storeKey) || "{}");
  }
  get(key) {
    const store = JSON.parse(this.storage.getItem(this._storeKey) || "{}");
    return store[key];
  }
  set(key, value) {
    const store = JSON.parse(this.storage.getItem(this._storeKey) || "{}");
    store[key] = value;
    this.storage.setItem(this._storeKey, JSON.stringify(store));
  }
}
_BrowserStorage = BrowserStorage;
_babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default()(BrowserStorage, "instanceMap", new Map());

/***/ }),

/***/ 107:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   F3: () => (/* binding */ BUILD_ENV),
/* harmony export */   FR: () => (/* binding */ AUTH_ACTIONS),
/* harmony export */   LN: () => (/* binding */ storeKey),
/* harmony export */   Lr: () => (/* binding */ WEB3AUTH_NETWORK),
/* harmony export */   PV: () => (/* binding */ MFA_LEVELS),
/* harmony export */   el: () => (/* binding */ SUPPORTED_KEY_CURVES),
/* harmony export */   lh: () => (/* binding */ WEB3AUTH_LEGACY_NETWORK),
/* harmony export */   sE: () => (/* binding */ UX_MODE),
/* harmony export */   uv: () => (/* binding */ LOGIN_PROVIDER),
/* harmony export */   yt: () => (/* binding */ WEB3AUTH_SAPPHIRE_NETWORK)
/* harmony export */ });
/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(846);
/* harmony import */ var _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _toruslabs_constants__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(145);
/* harmony import */ var _toruslabs_constants__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_toruslabs_constants__WEBPACK_IMPORTED_MODULE_1__);


const storeKey = "auth_store";
const WEB3AUTH_LEGACY_NETWORK = _toruslabs_constants__WEBPACK_IMPORTED_MODULE_1__.TORUS_LEGACY_NETWORK;
const WEB3AUTH_SAPPHIRE_NETWORK = _toruslabs_constants__WEBPACK_IMPORTED_MODULE_1__.TORUS_SAPPHIRE_NETWORK;
const UX_MODE = {
  POPUP: "popup",
  REDIRECT: "redirect"
};
const WEB3AUTH_NETWORK = _babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default()(_babel_runtime_helpers_objectSpread2__WEBPACK_IMPORTED_MODULE_0___default()({}, WEB3AUTH_SAPPHIRE_NETWORK), WEB3AUTH_LEGACY_NETWORK);
const SUPPORTED_KEY_CURVES = {
  SECP256K1: "secp256k1",
  ED25519: "ed25519",
  OTHER: "other"
};
const LOGIN_PROVIDER = {
  GOOGLE: "google",
  FACEBOOK: "facebook",
  REDDIT: "reddit",
  DISCORD: "discord",
  TWITCH: "twitch",
  APPLE: "apple",
  LINE: "line",
  GITHUB: "github",
  KAKAO: "kakao",
  LINKEDIN: "linkedin",
  TWITTER: "twitter",
  WEIBO: "weibo",
  WECHAT: "wechat",
  FARCASTER: "farcaster",
  EMAIL_PASSWORDLESS: "email_passwordless",
  SMS_PASSWORDLESS: "sms_passwordless",
  WEBAUTHN: "webauthn",
  JWT: "jwt",
  PASSKEYS: "passkeys",
  AUTHENTICATOR: "authenticator"
};
const MFA_LEVELS = {
  DEFAULT: "default",
  OPTIONAL: "optional",
  MANDATORY: "mandatory",
  NONE: "none"
};
const AUTH_ACTIONS = {
  LOGIN: "login",
  ENABLE_MFA: "enable_mfa",
  MANAGE_MFA: "manage_mfa",
  ADD_SOCIAL_FACTOR: "add_social_factor",
  MODIFY_SOCIAL_FACTOR: "modify_social_factor",
  ADD_AUTHENTICATOR_FACTOR: "add_authenticator_factor",
  ADD_PASSKEY_FACTOR: "add_passkey_factor"
};
const BUILD_ENV = {
  PRODUCTION: "production",
  DEVELOPMENT: "development",
  STAGING: "staging",
  TESTING: "testing"
};

/***/ }),

/***/ 146:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  FR: () => (/* reexport */ constants/* AUTH_ACTIONS */.FR),
  F3: () => (/* reexport */ constants/* BUILD_ENV */.F3),
  sV: () => (/* reexport */ browserStorage/* BrowserStorage */.s),
  Yj: () => (/* reexport */ LANGUAGES),
  so: () => (/* reexport */ LANGUAGE_MAP),
  uv: () => (/* reexport */ constants/* LOGIN_PROVIDER */.uv),
  F8: () => (/* reexport */ MFA_FACTOR),
  PV: () => (/* reexport */ constants/* MFA_LEVELS */.PV),
  ny: () => (/* reexport */ browserStorage/* MemoryStore */.n),
  el: () => (/* reexport */ constants/* SUPPORTED_KEY_CURVES */.el),
  Xh: () => (/* reexport */ THEME_MODES),
  sE: () => (/* reexport */ constants/* UX_MODE */.sE),
  lh: () => (/* reexport */ constants/* WEB3AUTH_LEGACY_NETWORK */.lh),
  Lr: () => (/* reexport */ constants/* WEB3AUTH_NETWORK */.Lr),
  yt: () => (/* reexport */ constants/* WEB3AUTH_SAPPHIRE_NETWORK */.yt),
  ph: () => (/* reexport */ applyWhiteLabelTheme),
  f7: () => (/* reexport */ utils/* base64toJSON */.f7),
  r0: () => (/* reexport */ utils/* base64url */.r0),
  KM: () => (/* reexport */ generateWhiteLabelTheme),
  Vb: () => (/* reexport */ getColorsList),
  Rm: () => (/* reexport */ utils/* jsonToBase64 */.Rm),
  _i: () => (/* reexport */ utils/* safeatob */._i),
  m5: () => (/* reexport */ utils/* safebtoa */.m5),
  VS: () => (/* reexport */ utils/* storageAvailable */.VS),
  LN: () => (/* reexport */ constants/* storeKey */.LN)
});

// EXTERNAL MODULE: ./src/utils/browserStorage.ts
var browserStorage = __webpack_require__(69);
// EXTERNAL MODULE: ./src/utils/constants.ts
var constants = __webpack_require__(107);
;// ./src/utils/interfaces.ts
/**
 * {@label loginProviderType}
 */

// autocomplete workaround https://github.com/microsoft/TypeScript/issues/29729

const LANGUAGES = {
  en: "en",
  ja: "ja",
  ko: "ko",
  de: "de",
  zh: "zh",
  es: "es",
  fr: "fr",
  pt: "pt",
  nl: "nl",
  tr: "tr"
};
const LANGUAGE_MAP = {
  en: "english",
  ja: "japanese",
  ko: "korean",
  de: "german",
  zh: "mandarin",
  es: "spanish",
  fr: "french",
  pt: "portuguese",
  nl: "dutch",
  tr: "turkish"
};
const THEME_MODES = {
  light: "light",
  dark: "dark",
  auto: "auto"
};
const MFA_FACTOR = {
  DEVICE: "deviceShareFactor",
  BACKUP_SHARE: "backUpShareFactor",
  SOCIAL_BACKUP: "socialBackupFactor",
  PASSWORD: "passwordFactor",
  PASSKEYS: "passkeysFactor",
  AUTHENTICATOR: "authenticatorFactor"
};
// EXTERNAL MODULE: ./src/utils/utils.ts + 1 modules
var utils = __webpack_require__(709);
;// external "color"
const external_color_namespaceObject = require("color");
var external_color_default = /*#__PURE__*/__webpack_require__.n(external_color_namespaceObject);
;// ./src/utils/whitelabel.ts

function getColorsList(colorsAmount = 3, colorsShiftAmount = 50, mixColor = "black", rotate = 0, saturation = 20, mainColor = "#0346ff") {
  const colorsList = [];
  let step;
  for (step = 0; step < colorsAmount; step += 1) {
    colorsList.push(external_color_default()(mainColor).rotate((step + 1) / colorsAmount * -rotate).saturate((step + 1) / colorsAmount * (saturation / 100)).mix(external_color_default()(mixColor), colorsShiftAmount / 100 * (step + 1) / colorsAmount).hex());
  }
  return colorsList;
}
function generateWhiteLabelTheme(primary) {
  const darkSet = getColorsList(3, 50, "black", 0, 20, primary);
  const lightSet = getColorsList(6, 85, "white", 0, 20, primary);
  return [...darkSet.reverse(), primary, ...lightSet];
}
function applyWhiteLabelTheme(rootElement, theme) {
  if (theme.primary) {
    const themeSet = generateWhiteLabelTheme(theme.primary);
    rootElement.style.setProperty("--app-primary-900", themeSet[0]);
    rootElement.style.setProperty("--app-primary-800", themeSet[1]);
    rootElement.style.setProperty("--app-primary-700", themeSet[2]);
    rootElement.style.setProperty("--app-primary-600", themeSet[3]);
    rootElement.style.setProperty("--app-primary-500", themeSet[4]);
    rootElement.style.setProperty("--app-primary-400", themeSet[5]);
    rootElement.style.setProperty("--app-primary-300", themeSet[6]);
    rootElement.style.setProperty("--app-primary-200", themeSet[7]);
    rootElement.style.setProperty("--app-primary-100", themeSet[8]);
    rootElement.style.setProperty("--app-primary-50", themeSet[9]);
  }
  if (theme.onPrimary) {
    rootElement.style.setProperty("--app-on-primary", theme.onPrimary);
  }
}
;// ./src/utils/index.ts






/***/ }),

/***/ 627:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  H: () => (/* binding */ loglevel)
});

;// external "loglevel"
const external_loglevel_namespaceObject = require("loglevel");
var external_loglevel_default = /*#__PURE__*/__webpack_require__.n(external_loglevel_namespaceObject);
;// ./src/utils/logger.ts

const loglevel = external_loglevel_default().getLogger("auth");
loglevel.setLevel("error");

/***/ }),

/***/ 709:
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";

// EXPORTS
__webpack_require__.d(__webpack_exports__, {
  f7: () => (/* binding */ base64toJSON),
  r0: () => (/* binding */ base64url),
  Rm: () => (/* binding */ jsonToBase64),
  _i: () => (/* binding */ safeatob),
  m5: () => (/* binding */ safebtoa),
  VS: () => (/* binding */ storageAvailable)
});

;// external "base64url"
const external_base64url_namespaceObject = require("base64url");
var external_base64url_default = /*#__PURE__*/__webpack_require__.n(external_base64url_namespaceObject);
;// ./src/utils/utils.ts

const base64url = (external_base64url_default());
function safebtoa(str) {
  return base64url.encode(str);
}
function safeatob(str) {
  // Going backwards: from bytestream, to percent-encoding, to original string.
  return base64url.decode(str);
}
function base64toJSON(b64str) {
  return JSON.parse(base64url.decode(b64str));
}
function jsonToBase64(json) {
  return base64url.encode(JSON.stringify(json));
}
function storageAvailable(type) {
  let storageExists = false;
  let storageLength = 0;
  let storage;
  try {
    storage = window[type];
    storageExists = true;
    storageLength = storage.length;
    const x = "__storage_test__";
    storage.setItem(x, x);
    storage.removeItem(x);
    return true;
  } catch (err) {
    const error = err;
    return error && (
    // everything except Firefox
    error.code === 22 ||
    // Firefox
    error.code === 1014 ||
    // test name field too, because code might not be present
    // everything except Firefox
    error.name === "QuotaExceededError" ||
    // Firefox
    error.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
    // acknowledge QuotaExceededError only if there's something already stored
    storageExists && storageLength !== 0;
  }
}

/***/ }),

/***/ 990:
/***/ ((module) => {

"use strict";
module.exports = require("@babel/runtime/helpers/defineProperty");

/***/ }),

/***/ 846:
/***/ ((module) => {

"use strict";
module.exports = require("@babel/runtime/helpers/objectSpread2");

/***/ }),

/***/ 145:
/***/ ((module) => {

"use strict";
module.exports = require("@toruslabs/constants");

/***/ }),

/***/ 735:
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),

/***/ 824:
/***/ ((module) => {

"use strict";
module.exports = require("json-stable-stringify");

/***/ }),

/***/ 741:
/***/ ((module) => {

"use strict";
module.exports = require("readable-stream");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry needs to be wrapped in an IIFE because it needs to be in strict mode.
(() => {
"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   AUTH_ACTIONS: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.FR),
/* harmony export */   Auth: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.Nj),
/* harmony export */   AuthError: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.lR),
/* harmony export */   BUILD_ENV: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.F3),
/* harmony export */   BrowserStorage: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.sV),
/* harmony export */   InitializationError: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.D3),
/* harmony export */   LANGUAGES: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.Yj),
/* harmony export */   LANGUAGE_MAP: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.so),
/* harmony export */   LOGIN_PROVIDER: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.uv),
/* harmony export */   LoginError: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.Qd),
/* harmony export */   MFA_FACTOR: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.F8),
/* harmony export */   MFA_LEVELS: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.PV),
/* harmony export */   MemoryStore: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.ny),
/* harmony export */   SECP256K1_CURVE_N: () => (/* reexport safe */ _subkey__WEBPACK_IMPORTED_MODULE_4__.QC),
/* harmony export */   STARKNET_NETWORKS: () => (/* reexport safe */ _starkey__WEBPACK_IMPORTED_MODULE_3__.hk),
/* harmony export */   SUPPORTED_KEY_CURVES: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.el),
/* harmony export */   THEME_MODES: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.Xh),
/* harmony export */   UX_MODE: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.sE),
/* harmony export */   WEB3AUTH_LEGACY_NETWORK: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.lh),
/* harmony export */   WEB3AUTH_NETWORK: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.Lr),
/* harmony export */   WEB3AUTH_SAPPHIRE_NETWORK: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.yt),
/* harmony export */   applyWhiteLabelTheme: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.ph),
/* harmony export */   base64toJSON: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.f7),
/* harmony export */   base64url: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.r0),
/* harmony export */   constructURL: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.j8),
/* harmony export */   generateWhiteLabelTheme: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.KM),
/* harmony export */   getColorsList: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.Vb),
/* harmony export */   getED25519Key: () => (/* reexport safe */ _ed25519__WEBPACK_IMPORTED_MODULE_1__.n),
/* harmony export */   getHashQueryParams: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.bG),
/* harmony export */   getPopupFeatures: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.A9),
/* harmony export */   getStarkHDAccount: () => (/* reexport safe */ _starkey__WEBPACK_IMPORTED_MODULE_3__.Nh),
/* harmony export */   getTimeout: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.uN),
/* harmony export */   isMobileOrTablet: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.Gz),
/* harmony export */   jsonToBase64: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.Rm),
/* harmony export */   loglevel: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.H$),
/* harmony export */   mimcGetConstants: () => (/* reexport safe */ _subkey__WEBPACK_IMPORTED_MODULE_4__.qP),
/* harmony export */   mimcHash: () => (/* reexport safe */ _subkey__WEBPACK_IMPORTED_MODULE_4__.tL),
/* harmony export */   mimcMultiHash: () => (/* reexport safe */ _subkey__WEBPACK_IMPORTED_MODULE_4__.qM),
/* harmony export */   mimgGetIV: () => (/* reexport safe */ _subkey__WEBPACK_IMPORTED_MODULE_4__.Ao),
/* harmony export */   safeatob: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__._i),
/* harmony export */   safebtoa: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.m5),
/* harmony export */   starkEc: () => (/* reexport safe */ _starkey__WEBPACK_IMPORTED_MODULE_3__.yN),
/* harmony export */   starkGrindKey: () => (/* reexport safe */ _starkey__WEBPACK_IMPORTED_MODULE_3__.tr),
/* harmony export */   starkPedersen: () => (/* reexport safe */ _starkey__WEBPACK_IMPORTED_MODULE_3__.IG),
/* harmony export */   starkSign: () => (/* reexport safe */ _starkey__WEBPACK_IMPORTED_MODULE_3__.Br),
/* harmony export */   starkVerify: () => (/* reexport safe */ _starkey__WEBPACK_IMPORTED_MODULE_3__.Bl),
/* harmony export */   storageAvailable: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.VS),
/* harmony export */   storeKey: () => (/* reexport safe */ _utils__WEBPACK_IMPORTED_MODULE_5__.LN),
/* harmony export */   subkey: () => (/* reexport safe */ _subkey__WEBPACK_IMPORTED_MODULE_4__.CS),
/* harmony export */   version: () => (/* reexport safe */ _core__WEBPACK_IMPORTED_MODULE_0__.rE)
/* harmony export */ });
/* harmony import */ var _core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(432);
/* harmony import */ var _ed25519__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(979);
/* harmony import */ var _jrpc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(868);
/* harmony reexport (unknown) */ var __WEBPACK_REEXPORT_OBJECT__ = {};
/* harmony reexport (unknown) */ for(const __WEBPACK_IMPORT_KEY__ in _jrpc__WEBPACK_IMPORTED_MODULE_2__) if(["default","Auth","AuthError","InitializationError","LoginError","constructURL","getHashQueryParams","getPopupFeatures","getTimeout","isMobileOrTablet","loglevel","version","getED25519Key"].indexOf(__WEBPACK_IMPORT_KEY__) < 0) __WEBPACK_REEXPORT_OBJECT__[__WEBPACK_IMPORT_KEY__] = () => _jrpc__WEBPACK_IMPORTED_MODULE_2__[__WEBPACK_IMPORT_KEY__]
/* harmony reexport (unknown) */ __webpack_require__.d(__webpack_exports__, __WEBPACK_REEXPORT_OBJECT__);
/* harmony import */ var _starkey__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(887);
/* harmony import */ var _subkey__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(74);
/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(146);






})();

module.exports = __webpack_exports__;
/******/ })()
;