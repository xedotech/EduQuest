import { AUTH_ACTIONS_TYPE, AuthOptions, AuthSessionData, AuthUserInfo, BaseRedirectParams, LoginParams, SocialMfaModParams } from "../utils";
export declare class Auth {
    state: AuthSessionData;
    options: AuthOptions;
    private sessionManager;
    private currentStorage;
    private _storageBaseKey;
    private dappState;
    private addVersionInUrls;
    constructor(options: AuthOptions);
    get privKey(): string;
    get coreKitKey(): string;
    get ed25519PrivKey(): string;
    get coreKitEd25519Key(): string;
    get sessionId(): string;
    get sessionNamespace(): string;
    get appState(): string;
    private get baseUrl();
    private get dashboardUrl();
    init(): Promise<void>;
    login(params: LoginParams & Partial<BaseRedirectParams>): Promise<{
        privKey: string;
    } | null>;
    logout(): Promise<void>;
    enableMFA(params: Partial<LoginParams>): Promise<boolean>;
    manageMFA(params: Partial<LoginParams>): Promise<void>;
    manageSocialFactor(actionType: AUTH_ACTIONS_TYPE, params: SocialMfaModParams & Partial<BaseRedirectParams>): Promise<boolean>;
    addAuthenticatorFactor(params: Partial<BaseRedirectParams>): Promise<boolean>;
    addPasskeyFactor(params: Partial<BaseRedirectParams>): Promise<boolean>;
    getUserInfo(): AuthUserInfo;
    private createLoginSession;
    private _authorizeSession;
    private updateState;
    private rehydrateSession;
    private authHandler;
}
