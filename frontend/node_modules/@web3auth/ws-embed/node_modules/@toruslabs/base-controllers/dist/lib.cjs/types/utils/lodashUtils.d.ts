export declare function omitBy<T>(object: Record<string, T>, predicate: (value: T, key: string) => boolean): Record<string, T>;
export declare function pickBy<T>(object: Record<string, T>, predicate: (value: T, key: string) => boolean): Record<string, T>;
export declare function cloneDeep<T>(object: T): T;
export declare function sortBy<T>(arr: T[], key: keyof T): T[];
export declare function keyBy<T>(arr: T[], key: keyof T): Record<string, T>;
export declare function mapValues<T extends object, U>(obj: T, iteratee: (value: T[keyof T], key: keyof T) => U): {
    [K in keyof T]: U;
};
