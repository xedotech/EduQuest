import { type SafeEventEmitterProvider } from "@web3auth/auth";
import { BaseConfig, BaseControllerEvents, BaseState } from "../interfaces";
export interface BaseBlockTrackerConfig extends BaseConfig {
    blockResetDuration?: number;
}
export interface PollingBlockTrackerConfig extends BaseBlockTrackerConfig {
    provider: SafeEventEmitterProvider;
    pollingInterval: number;
    retryTimeout: number;
    setSkipCacheFlag: boolean;
}
export interface BaseBlockTrackerState<T extends {
    idempotencyKey: string;
}> extends BaseState {
    _currentBlock?: T;
    _isRunning?: boolean;
}
export interface BaseBlockTrackerEvents<T, S> extends BaseControllerEvents<S> {
    sync: (data: {
        oldBlock: T;
        newBlock: T;
    }) => void;
    latest: (block: T) => void;
    newListener: () => void;
    removeListener: () => void;
    error?: (error: unknown) => void;
}
