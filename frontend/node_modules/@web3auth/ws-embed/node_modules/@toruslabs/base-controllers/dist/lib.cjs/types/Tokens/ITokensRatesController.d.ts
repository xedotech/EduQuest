import { BaseConfig, BaseState, IController } from "../interfaces";
import { BaseTokenInfo, TokenAddress } from "./ITokensController";
export interface BaseTokenRatesControllerConfig extends BaseConfig {
    pollInterval: number;
    currencyApi: string;
    chainId: string;
    selectedAddress: string;
    nativeCurrency: string;
    tokens: BaseTokenInfo[];
}
export type ContractExchangeRates = Record<TokenAddress, number | undefined>;
export interface BaseTokenRatesControllerState extends BaseState {
    contractExchangeRates: ContractExchangeRates;
}
export interface ITokenRatesController<C extends BaseTokenRatesControllerConfig, S extends BaseTokenRatesControllerState> extends IController<C, S> {
    scheduleConversionInterval(): void;
    updateExchangeRates(): Promise<void>;
}
