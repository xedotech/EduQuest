import { AuthSessionConfig, WEB3AUTH_NETWORK_TYPE, WhiteLabelData } from "../utils/interfaces";
export declare function preloadIframe(): Promise<void>;
export declare class AuthProvider {
    sdkUrl: string;
    whiteLabel: WhiteLabelData;
    initialized: boolean;
    private loginCallbackSuccess;
    private loginCallbackFailed;
    private readonly embedNonce;
    constructor({ sdkUrl, whiteLabel }: {
        sdkUrl: string;
        whiteLabel: WhiteLabelData;
    });
    get targetOrigin(): string;
    getAuthServiceIframe(): HTMLIFrameElement;
    registerAuthServiceIframe(iframe: HTMLIFrameElement): void;
    cleanup(): void;
    init({ network, clientId }: {
        network: WEB3AUTH_NETWORK_TYPE;
        clientId: string;
    }): Promise<void>;
    postLoginInitiatedMessage(loginConfig: AuthSessionConfig, nonce?: string): Promise<{
        sessionId?: string;
        sessionNamespace?: string;
        error?: string;
    }>;
    postLoginCancelledMessage(nonce: string): void;
}
