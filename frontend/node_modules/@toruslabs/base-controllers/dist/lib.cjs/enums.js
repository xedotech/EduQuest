'use strict';

const FEATURES_PROVIDER_CHANGE_WINDOW = {
  height: 660,
  width: 375
};
const FEATURES_DEFAULT_WALLET_WINDOW = {
  height: 740,
  width: 1315
};
const FEATURES_DEFAULT_POPUP_WINDOW = {
  height: 700,
  width: 1200
};
const FEATURES_CONFIRM_WINDOW = {
  height: 700,
  width: 450
};
const POPUP_LOADED = "popup_loaded";
const POPUP_RESULT = "popup_result";
const SETUP_COMPLETE = "setup_complete";
const ACTIVITY_ACTION_ALL = "walletActivity.allTransactions";
const ACTIVITY_ACTION_SEND = "walletActivity.send";
const ACTIVITY_ACTION_BURN = "walletActivity.burn";
const ACTIVITY_ACTION_RECEIVE = "walletActivity.receive";
const ACTIVITY_ACTION_TOPUP = "walletActivity.topup";
const ACTIVITY_ACTION_CREATE_TRUSTLINE = "walletActivity.createTrustline";
const ACTIVITY_ACTION_REMOVE_TRUSTLINE = "walletActivity.removeTrustline";
const ACTIVITY_ACTION_CREATE_NFT_OFFER = "walletActivity.createNftOffer";
const ACTIVITY_ACTION_ACCEPT_NFT_OFFER = "walletActivity.acceptNftOffer";
const ACTIVITY_ACTION_CANCEL_NFT_OFFER = "walletActivity.cancelNftOffer";
const ACTIVITY_PERIOD_ALL = "walletActivity.all";
const ACTIVITY_PERIOD_WEEK_ONE = "walletActivity.lastOneWeek";
const ACTIVITY_PERIOD_MONTH_ONE = "walletActivity.lastOneMonth";
const ACTIVITY_PERIOD_MONTH_SIX = "walletActivity.lastSixMonts";
const ACTIVITY_STATUS_SUCCESSFUL = "walletActivity.successful";
const ACTIVITY_STATUS_UNSUCCESSFUL = "walletActivity.unsuccessful";
const ACTIVITY_STATUS_PENDING = "walletActivity.pending";
const ACTIVITY_STATUS_CANCELLED = "walletActivity.cancelled";
const ACTIVITY_STATUS_CANCELLING = "walletActivity.cancelling";
const COMMUNICATION_NOTIFICATIONS = {
  IFRAME_STATUS: "iframe_status",
  // Tell embed to close the window
  CLOSE_WINDOW: "close_window",
  USER_LOGGED_IN: "user_logged_in",
  USER_LOGGED_OUT: "user_logged_out",
  // toggle widget button based on gating and config
  TOGGLE_WIDGET_BUTTON: "toggle_widget_button",
  // allow wallet service based on gating
  ALLOW_WALLET_SERVICE: "allow_wallet_service"
};
const COMMUNICATION_JRPC_METHODS = {
  LOGOUT: "logout",
  WALLET_INSTANCE_ID: "wallet_instance_id",
  USER_INFO: "user_info",
  SET_PROVIDER: "set_provider",
  TOPUP: "topup",
  IFRAME_STATUS: "iframe_status",
  // user has closed the window from embed's side
  CLOSED_WINDOW: "closed_window",
  WINDOW_BLOCKED: "window_blocked",
  GET_PROVIDER_STATE: "get_provider_state",
  LOGIN_WITH_PRIVATE_KEY: "login_with_private_key",
  SHOW_WALLET_CONNECT: "show_wallet_connect",
  SHOW_CHECKOUT: "show_checkout",
  SHOW_WALLET_UI: "show_wallet_ui",
  SHOW_SWAP: "show_swap",
  LOGIN_WITH_SESSION_ID: "login_with_session_id"
};
const PROVIDER_JRPC_METHODS = {
  GET_PROVIDER_STATE: "wallet_get_provider_state",
  WALLET_SWITCH_CHAIN: "wallet_switchChain"
};
const PROVIDER_NOTIFICATIONS = {
  ACCOUNTS_CHANGED: "wallet_accounts_changed",
  CHAIN_CHANGED: "wallet_chain_changed",
  UNLOCK_STATE_CHANGED: "wallet_unlock_state_changed"
};
const BROADCAST_CHANNELS = {
  REDIRECT_CHANNEL: "redirect_channel",
  PROVIDER_CHANGE_CHANNEL: "torus_provider_change_channel",
  TRANSACTION_CHANNEL: "torus_channel",
  MESSAGE_CHANNEL: "torus_message_channel",
  WALLET_LOGOUT_CHANNEL: "wallet_logout_channel",
  WALLET_SELECTED_ADDRESS_CHANNEL: "wallet_selected_address_channel",
  WALLET_NETWORK_CHANGE_CHANNEL: "wallet_network_change_channel",
  WALLET_ACCOUNT_IMPORT_CHANNEL: "wallet_account_import_channel",
  THEME_CHANGE: "theme_change_channel",
  TOP_UP_CHANNEL: "top_up_channel"
};
const BROADCAST_CHANNELS_MSGS = {
  LOGOUT: "logout",
  ACCOUNT_IMPORTED: "account_imported",
  SELECTED_ADDRESS_CHANGE: "selected_address_change",
  NETWORK_CHANGE: "network_change",
  SET_THEME: "set_theme"
};
let ControllerEvents = /*#__PURE__*/function (ControllerEvents) {
  ControllerEvents["UserUnauthorized"] = "user.unauthorized";
  return ControllerEvents;
}({});

exports.ACTIVITY_ACTION_ACCEPT_NFT_OFFER = ACTIVITY_ACTION_ACCEPT_NFT_OFFER;
exports.ACTIVITY_ACTION_ALL = ACTIVITY_ACTION_ALL;
exports.ACTIVITY_ACTION_BURN = ACTIVITY_ACTION_BURN;
exports.ACTIVITY_ACTION_CANCEL_NFT_OFFER = ACTIVITY_ACTION_CANCEL_NFT_OFFER;
exports.ACTIVITY_ACTION_CREATE_NFT_OFFER = ACTIVITY_ACTION_CREATE_NFT_OFFER;
exports.ACTIVITY_ACTION_CREATE_TRUSTLINE = ACTIVITY_ACTION_CREATE_TRUSTLINE;
exports.ACTIVITY_ACTION_RECEIVE = ACTIVITY_ACTION_RECEIVE;
exports.ACTIVITY_ACTION_REMOVE_TRUSTLINE = ACTIVITY_ACTION_REMOVE_TRUSTLINE;
exports.ACTIVITY_ACTION_SEND = ACTIVITY_ACTION_SEND;
exports.ACTIVITY_ACTION_TOPUP = ACTIVITY_ACTION_TOPUP;
exports.ACTIVITY_PERIOD_ALL = ACTIVITY_PERIOD_ALL;
exports.ACTIVITY_PERIOD_MONTH_ONE = ACTIVITY_PERIOD_MONTH_ONE;
exports.ACTIVITY_PERIOD_MONTH_SIX = ACTIVITY_PERIOD_MONTH_SIX;
exports.ACTIVITY_PERIOD_WEEK_ONE = ACTIVITY_PERIOD_WEEK_ONE;
exports.ACTIVITY_STATUS_CANCELLED = ACTIVITY_STATUS_CANCELLED;
exports.ACTIVITY_STATUS_CANCELLING = ACTIVITY_STATUS_CANCELLING;
exports.ACTIVITY_STATUS_PENDING = ACTIVITY_STATUS_PENDING;
exports.ACTIVITY_STATUS_SUCCESSFUL = ACTIVITY_STATUS_SUCCESSFUL;
exports.ACTIVITY_STATUS_UNSUCCESSFUL = ACTIVITY_STATUS_UNSUCCESSFUL;
exports.BROADCAST_CHANNELS = BROADCAST_CHANNELS;
exports.BROADCAST_CHANNELS_MSGS = BROADCAST_CHANNELS_MSGS;
exports.COMMUNICATION_JRPC_METHODS = COMMUNICATION_JRPC_METHODS;
exports.COMMUNICATION_NOTIFICATIONS = COMMUNICATION_NOTIFICATIONS;
exports.ControllerEvents = ControllerEvents;
exports.FEATURES_CONFIRM_WINDOW = FEATURES_CONFIRM_WINDOW;
exports.FEATURES_DEFAULT_POPUP_WINDOW = FEATURES_DEFAULT_POPUP_WINDOW;
exports.FEATURES_DEFAULT_WALLET_WINDOW = FEATURES_DEFAULT_WALLET_WINDOW;
exports.FEATURES_PROVIDER_CHANGE_WINDOW = FEATURES_PROVIDER_CHANGE_WINDOW;
exports.POPUP_LOADED = POPUP_LOADED;
exports.POPUP_RESULT = POPUP_RESULT;
exports.PROVIDER_JRPC_METHODS = PROVIDER_JRPC_METHODS;
exports.PROVIDER_NOTIFICATIONS = PROVIDER_NOTIFICATIONS;
exports.SETUP_COMPLETE = SETUP_COMPLETE;
