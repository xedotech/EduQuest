'use strict';

var _defineProperty = require('@babel/runtime/helpers/defineProperty');
var broadcastChannel = require('@toruslabs/broadcast-channel');
var log = require('loglevel');
var enums = require('../enums.js');
var utils = require('../utils/utils.js');

// Always listening channels. Hence, no window id
class PopupStoreChannel {
  constructor({
    instanceId,
    handleLogout,
    handleAccountImport,
    handleNetworkChange,
    handleSelectedAddressChange,
    handleThemeChange
  }) {
    _defineProperty(this, "handleLogout", void 0);
    _defineProperty(this, "handleAccountImport", void 0);
    _defineProperty(this, "handleNetworkChange", void 0);
    _defineProperty(this, "handleThemeChange", void 0);
    _defineProperty(this, "handleSelectedAddressChange", void 0);
    _defineProperty(this, "instanceId", void 0);
    this.instanceId = instanceId;
    this.handleLogout = handleLogout;
    this.handleAccountImport = handleAccountImport;
    this.handleNetworkChange = handleNetworkChange;
    this.handleSelectedAddressChange = handleSelectedAddressChange;
    this.handleThemeChange = handleThemeChange;
  }
  setupStoreChannels() {
    this.logoutChannel();
    this.importAccountChannel();
    this.networkChangeChannel();
    this.selectedAddressChangeChannel();
    this.themeChangedChannel();
  }
  logoutChannel() {
    const logoutChannel = new broadcastChannel.BroadcastChannel(`${enums.BROADCAST_CHANNELS.WALLET_LOGOUT_CHANNEL}_${this.instanceId}`, utils.broadcastChannelOptions);
    logoutChannel.addEventListener("message", ev => {
      var _ev$data;
      log.info("received logout message", ev);
      if (!ev.error && ((_ev$data = ev.data) === null || _ev$data === void 0 ? void 0 : _ev$data.type) === enums.BROADCAST_CHANNELS_MSGS.LOGOUT) {
        log.info("Logging Out");
        this.handleLogout();
      }
    });
  }
  importAccountChannel() {
    const walletAccountImportChannel = new broadcastChannel.BroadcastChannel(`${enums.BROADCAST_CHANNELS.WALLET_ACCOUNT_IMPORT_CHANNEL}_${this.instanceId}`, utils.broadcastChannelOptions);
    walletAccountImportChannel.addEventListener("message", ev => {
      var _ev$data2;
      if (!ev.error && ((_ev$data2 = ev.data) === null || _ev$data2 === void 0 ? void 0 : _ev$data2.type) === enums.BROADCAST_CHANNELS_MSGS.ACCOUNT_IMPORTED) {
        var _ev$data3;
        this.handleAccountImport((_ev$data3 = ev.data) === null || _ev$data3 === void 0 ? void 0 : _ev$data3.privKey);
      }
    });
  }
  networkChangeChannel() {
    const walletAccountImportChannel = new broadcastChannel.BroadcastChannel(`${enums.BROADCAST_CHANNELS.WALLET_NETWORK_CHANGE_CHANNEL}_${this.instanceId}`, utils.broadcastChannelOptions);
    walletAccountImportChannel.addEventListener("message", ev => {
      var _ev$data4;
      if (!ev.error && ((_ev$data4 = ev.data) === null || _ev$data4 === void 0 ? void 0 : _ev$data4.type) === enums.BROADCAST_CHANNELS_MSGS.NETWORK_CHANGE) {
        var _ev$data5;
        this.handleNetworkChange((_ev$data5 = ev.data) === null || _ev$data5 === void 0 ? void 0 : _ev$data5.network);
      }
    });
  }
  themeChangedChannel() {
    const walletAccountImportChannel = new broadcastChannel.BroadcastChannel(`${enums.BROADCAST_CHANNELS.THEME_CHANGE}_${this.instanceId}`, utils.broadcastChannelOptions);
    walletAccountImportChannel.addEventListener("message", ev => {
      var _ev$data6;
      log.info({
        ev
      });
      if (!ev.error && ((_ev$data6 = ev.data) === null || _ev$data6 === void 0 ? void 0 : _ev$data6.type) === enums.BROADCAST_CHANNELS_MSGS.SET_THEME) {
        var _ev$data7;
        this.handleThemeChange((_ev$data7 = ev.data) === null || _ev$data7 === void 0 ? void 0 : _ev$data7.theme);
      }
    });
  }
  selectedAddressChangeChannel() {
    const walletAccountImportChannel = new broadcastChannel.BroadcastChannel(`${enums.BROADCAST_CHANNELS.WALLET_SELECTED_ADDRESS_CHANNEL}_${this.instanceId}`, utils.broadcastChannelOptions);
    walletAccountImportChannel.addEventListener("message", ev => {
      var _ev$data8;
      if (!ev.error && ((_ev$data8 = ev.data) === null || _ev$data8 === void 0 ? void 0 : _ev$data8.type) === enums.BROADCAST_CHANNELS_MSGS.SELECTED_ADDRESS_CHANGE) {
        var _ev$data9;
        this.handleSelectedAddressChange((_ev$data9 = ev.data) === null || _ev$data9 === void 0 ? void 0 : _ev$data9.selectedAddress);
      }
    });
  }
}

exports.PopupStoreChannel = PopupStoreChannel;
