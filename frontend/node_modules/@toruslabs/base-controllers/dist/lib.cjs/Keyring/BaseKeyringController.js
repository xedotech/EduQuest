'use strict';

var BaseController = require('../BaseController.js');
var utils = require('../utils/utils.js');

class BaseKeyringController extends BaseController.BaseController {
  constructor({
    config = {},
    state
  }) {
    var _state$wallets;
    super({
      config,
      state
    });
    this.defaultState = {
      wallets: (_state$wallets = state.wallets) !== null && _state$wallets !== void 0 ? _state$wallets : []
    };
    this.initialize();
  }

  // for signing auth message
  async signAuthMessage(address, message) {
    const keyring = this.state.wallets.find(x => x.address === address);
    if (!keyring) {
      throw new Error("key does not exist");
    }
    const hashedMessage = utils.hashMessage(message).toString("hex");
    const rawMessageSig = await utils.signMessage(keyring.privateKey, hashedMessage);
    return rawMessageSig;
  }
}

exports.BaseKeyringController = BaseKeyringController;
