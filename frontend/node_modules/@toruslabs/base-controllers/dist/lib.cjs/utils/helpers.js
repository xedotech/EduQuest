'use strict';

const DEFAULT_IDLE_TIME = 60 * 3;
const createIdleTracker = activityThresholdTime => {
  let isIdle = false;
  let idleTimeout = null;
  const resetTimer = () => {
    if (idleTimeout) {
      window.clearTimeout(idleTimeout);
    }
    isIdle = false;
    idleTimeout = window.setTimeout(() => {
      isIdle = true;
    }, activityThresholdTime * 1000);
  };
  if (typeof window !== "undefined" && typeof document !== "undefined") {
    window.addEventListener("load", resetTimer);
    document.addEventListener("mousemove", resetTimer);
    document.addEventListener("keydown", resetTimer);
  }
  function checkIfIdle() {
    return isIdle;
  }
  return {
    checkIfIdle
  };
};
const idleTimeTracker = createIdleTracker(DEFAULT_IDLE_TIME);

exports.DEFAULT_IDLE_TIME = DEFAULT_IDLE_TIME;
exports.createIdleTracker = createIdleTracker;
exports.idleTimeTracker = idleTimeTracker;
