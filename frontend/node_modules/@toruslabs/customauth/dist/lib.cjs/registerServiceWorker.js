'use strict';

var registerServiceWorker$1 = require('@chaitanyapotti/register-service-worker');
var loglevel = require('./utils/loglevel.js');

const registerServiceWorker = baseUrl => new Promise((resolve, reject) => {
  const swUrl = `${baseUrl}sw.js`;
  if ("serviceWorker" in window.navigator) {
    // if swIntegrity is not calculated
    registerServiceWorker$1.register(swUrl, {
      ready() {
        loglevel.info("App is being served from cache by a service worker.\n For more details, visit https://goo.gl/AFskqB");
        resolve(undefined);
      },
      registered() {
        loglevel.info("Service worker has been registered.");
        resolve(undefined);
      },
      cached() {
        loglevel.info("Content has been cached for offline use.");
        resolve(undefined);
      },
      updatefound() {
        loglevel.info("New content is downloading.");
      },
      updated() {
        loglevel.info("New content is available; please refresh.");
      },
      offline() {
        loglevel.info("No internet connection found. App is running in offline mode.");
        reject(new Error("App is offline"));
      },
      error(error) {
        loglevel.error("Error during service worker registration:", error);
        reject(error);
      }
    });
  } else {
    reject(new Error("Service workers are not supported"));
  }
});

exports.registerServiceWorker = registerServiceWorker;
