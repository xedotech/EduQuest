import { MessageObject } from "../types";
import { microSeconds as micro } from "../util";
export declare const microSeconds: typeof micro;
export declare const type = "native";
interface ChannelState {
    time: number;
    messagesCallback: ((data: MessageObject) => void) | null;
    bc: BroadcastChannel;
    subFns: Array<() => void>;
}
export declare function create(channelName: string): ChannelState;
export declare function close(channelState: ChannelState): void;
export declare function postMessage(channelState: ChannelState, messageJson: MessageObject): Promise<void>;
export declare function onMessage(channelState: ChannelState, fn: (data: MessageObject) => void): void;
export declare function canBeUsed(): boolean;
export declare function averageResponseTime(): number;
export {};
