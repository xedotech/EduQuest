/**
 * A localStorage-only method which uses localstorage and its 'storage'-event
 * This does not work inside of webworkers because they have no access to locastorage
 * This is basically implemented to support IE9 or your grandmothers toaster.
 * @link https://caniuse.com/#feat=namevalue-storage
 * @link https://caniuse.com/#feat=indexeddb
 */
import { ObliviousSet } from "oblivious-set";
import { MessageObject } from "../types";
import { microSeconds as micro } from "../util";
export declare const microSeconds: typeof micro;
export declare const type = "localstorage";
interface StorageMessage {
    token: string;
    time: number;
    data: MessageObject;
    uuid: string;
}
interface ChannelState {
    channelName: string;
    uuid: string;
    time: number;
    eMIs: ObliviousSet<string>;
    listener?: (ev: StorageEvent) => void;
    messagesCallback?: (data: MessageObject) => void;
    messagesCallbackTime?: number;
}
interface LocalStorageOptions {
    localstorage: {
        removeTimeout: number;
    };
}
/**
 * copied from crosstab
 * @link https://github.com/tejacques/crosstab/blob/master/src/crosstab.js#L32
 */
export declare function getLocalStorage(): Storage | null;
export declare function storageKey(channelName: string): string;
/**
 * writes the new message to the storage
 * and fires the storage-event so other readers can find it
 */
export declare function postMessage(channelState: ChannelState, messageJson: MessageObject): Promise<void>;
export declare function addStorageEventListener(channelName: string, fn: (msg: StorageMessage) => void): (ev: StorageEvent) => void;
export declare function removeStorageEventListener(listener: (ev: StorageEvent) => void): void;
export declare function canBeUsed(): boolean;
export declare function create(channelName: string, options: LocalStorageOptions): ChannelState;
export declare function close(channelState: ChannelState): void;
export declare function onMessage(channelState: ChannelState, fn: (msg: MessageObject) => void, time: number): void;
export declare function averageResponseTime(): number;
export {};
