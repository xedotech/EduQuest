import { BaseSessionManager } from "./base";
import type { SessionManagerOptions } from "./interfaces";
export declare class SessionManager<T> extends BaseSessionManager<T> {
    sessionServerBaseUrl: string;
    sessionNamespace: string;
    allowedOrigin: string | boolean;
    sessionTime: number;
    sessionId: string;
    constructor({ sessionServerBaseUrl, sessionNamespace, sessionTime, sessionId, allowedOrigin }?: SessionManagerOptions);
    static generateRandomSessionKey(): string;
    createSession(data: T, headers?: RequestInit["headers"]): Promise<string>;
    authorizeSession({ headers }?: {
        headers: RequestInit["headers"];
    }): Promise<T>;
    updateSession(data: Partial<T>, headers?: RequestInit["headers"]): Promise<void>;
    invalidateSession(headers?: RequestInit["headers"]): Promise<boolean>;
}
