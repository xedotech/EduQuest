!function(r,e){"object"==typeof exports&&"object"==typeof module?module.exports=e():"function"==typeof define&&define.amd?define([],e):"object"==typeof exports?exports.Bs58=e():r.Bs58=e()}(self,(()=>(()=>{"use strict";var r={d:(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},o:(r,e)=>Object.prototype.hasOwnProperty.call(r,e),r:r=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(r,"__esModule",{value:!0})}},e={};r.r(e),r.d(e,{bs58:()=>t});const t=(r=>{const e=new Uint8Array(256);for(let r=0;r<e.length;r++)e[r]=255;for(let t=0;t<58;t++){const o=r.charAt(t),n=o.charCodeAt(0);if(255!==e[n])throw new TypeError(`${o} is ambiguous`);e[n]=t}const t=58,o=r.charAt(0),n=Math.log(t)/Math.log(256),f=Math.log(256)/Math.log(t);function i(r){if("string"!=typeof r)throw new TypeError("Expected String");if(0===r.length)return new Uint8Array;let f=0,i=0,a=0;for(;r[f]===o;)i++,f++;const c=(r.length-f)*n+1>>>0,l=new Uint8Array(c);for(;r[f];){let o=e[r.charCodeAt(f)];if(255===o)return;let n=0;for(let r=c-1;(0!==o||n<a)&&-1!==r;r--,n++)o+=t*l[r]>>>0,l[r]=o%256>>>0,o=o/256>>>0;if(0!==o)throw new Error("Non-zero carry");a=n,f++}let y=c-a;for(;y!==c&&0===l[y];)y++;const s=new Uint8Array(i+(c-y));let u=i;for(;y!==c;)s[u++]=l[y++];return s}return{encode:function(e){if(e instanceof Uint8Array||(ArrayBuffer.isView(e)?e=new Uint8Array(e.buffer,e.byteOffset,e.byteLength):Array.isArray(e)&&(e=Uint8Array.from(e))),!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(0===e.length)return"";let n=0,i=0,a=0;const c=e.length;for(;a!==c&&0===e[a];)a++,n++;const l=(c-a)*f+1>>>0,y=new Uint8Array(l);for(;a!==c;){let r=e[a],o=0;for(let e=l-1;(0!==r||o<i)&&-1!==e;e--,o++)r+=256*y[e]>>>0,y[e]=r%t>>>0,r=r/t>>>0;if(0!==r)throw new Error("Non-zero carry");i=o,a++}let s=l-i;for(;s!==l&&0===y[s];)s++;let u=o.repeat(n);for(;s<l;++s)u+=r.charAt(y[s]);return u},decodeUnsafe:i,decode:function(r){const e=i(r);if(e)return e;throw new Error("Non-base58 character")}}})("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");return e})()));