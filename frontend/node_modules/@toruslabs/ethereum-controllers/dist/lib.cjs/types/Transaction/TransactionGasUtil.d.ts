import { SafeEventEmitterProvider } from "@web3auth/auth";
import { PollingBlockTracker } from "../Block/PollingBlockTracker";
import { EthereumTransactionMeta } from "../utils/interfaces";
export declare class TransactionGasUtil {
    provider: SafeEventEmitterProvider;
    blockTracker: PollingBlockTracker;
    constructor(provider: SafeEventEmitterProvider, blockTracker: PollingBlockTracker);
    analyzeGasUsage(txMeta: EthereumTransactionMeta): Promise<{
        blockGasLimit: string;
        estimatedGasHex: `0x${string}`;
        simulationFails: Record<string, unknown>;
    }>;
    /**
      Adds a gas buffer with out exceeding the block gas limit
    */
    addGasBuffer(initialGasLimitHex: string, blockGasLimitHex: string, multiplier?: number): string;
    /**
      Estimates the tx's gas usage
    */
    private estimateTxGas;
}
