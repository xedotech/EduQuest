import { AbstractMessageController, BaseConfig, MessageControllerState, SwitchChainMessage, SwitchChainMessageParams, UserRequestApprovalParams } from "@toruslabs/base-controllers";
import { JRPCRequest } from "@web3auth/auth";
import { PreferencesController } from "../Preferences/PreferencesController";
export declare class SwitchChainController extends AbstractMessageController<SwitchChainMessage, SwitchChainMessageParams> {
    name: string;
    protected switchChain: PreferencesController["switchChain"];
    constructor({ config, state, switchChain, }: {
        config: Partial<BaseConfig>;
        state: Partial<MessageControllerState<SwitchChainMessage>>;
        switchChain: PreferencesController["switchChain"];
    });
    processSwitchChain(messageId: string): Promise<string>;
    addNewUnapprovedMessage(messageParams: SwitchChainMessageParams, req: JRPCRequest<unknown> & UserRequestApprovalParams): Promise<string>;
    addUnapprovedMessage(messageParams: SwitchChainMessageParams, req: JRPCRequest<unknown> & UserRequestApprovalParams): Promise<string>;
    prepMessageForSigning(messageParams: SwitchChainMessageParams): Promise<SwitchChainMessageParams>;
}
